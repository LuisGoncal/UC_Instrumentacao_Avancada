

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                                           Mon Dec 18 16:38:44 2023


     1                           	processor	18F47Q10
     2                           	pagewidth 132
     3                           	opt	flic
     4                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	udata_bank6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    12                           	psect	udata_bank7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    13                           	psect	udata_bank8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    14                           	psect	udata_bank9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    15                           	psect	udata_bank10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    16                           	psect	udata_bank11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    17                           	psect	udata_bank12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    18                           	psect	udata_bank14,global,class=BANK14,space=1,delta=1,lowdata,noexec
    19                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    20                           	psect	code,global,reloc=2,class=CODE,delta=1
    21                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    22                           	psect	edata,global,class=EEDATA,space=3,delta=1,noexec
    23                           	psect	intcode,global,delta=1
    24   000000                     
    25                           	psect	edata
    26   000000                     stk_offset	set	0
    27   000000                     auto_size	set	0
    28                           
    29                           ; stack_auto defines a symbol /name/_offset which equates to the
    30                           ; stack offset of the auto object in question
    31   000000                     
    32                           ; stack_param defines a symbol /name/_offset which equates to the
    33                           ; stack offset of the parameter object in question
    34   000000                     
    35                           ; alloc_stack adjusts the SP to allocate space for auto objects
    36                           ; it also links in to the btemp symbol so that can be used
    37   000000                     
    38                           ; restore_stack adjusts the SP to remove all auto and parameter
    39                           ; objects from the stack prior to returning from a function
    40   000000                     
    41                           	psect	intcode
    42   000008                     _int_handler:
    43                           	callstack 0
    44                           
    45                           ;when an interrupt happens, this function is called. It is your job to verify what interrupt happene
      +                          d and act accordingly
    46   000008  010E               	banksel	3784
    47   00000A  BBC8               	btfsc	3784,5,b	;Q: check if the EUSART1 RX flag is set. If so, go to the C function _getch. If not,
      +                           skip.
    48   00000C  ECF4  F008         	call	_getch
    49   000010  0010               	retfie	
    50                           tosu	equ	0xFFF
    51                           tosh	equ	0xFFE
    52                           tosl	equ	0xFFD
    53                           stkptr	equ	0xFFC
    54                           pclatu	equ	0xFFB
    55                           pclath	equ	0xFFA
    56                           pcl	equ	0xFF9
    57                           tblptru	equ	0xFF8
    58                           tblptrh	equ	0xFF7
    59                           tblptrl	equ	0xFF6
    60                           tablat	equ	0xFF5
    61                           prodh	equ	0xFF4
    62                           prodl	equ	0xFF3
    63                           indf0	equ	0xFEF
    64                           postinc0	equ	0xFEE
    65                           postdec0	equ	0xFED
    66                           preinc0	equ	0xFEC
    67                           plusw0	equ	0xFEB
    68                           fsr0h	equ	0xFEA
    69                           fsr0l	equ	0xFE9
    70                           wreg	equ	0xFE8
    71                           indf1	equ	0xFE7
    72                           postinc1	equ	0xFE6
    73                           postdec1	equ	0xFE5
    74                           preinc1	equ	0xFE4
    75                           plusw1	equ	0xFE3
    76                           fsr1h	equ	0xFE2
    77                           fsr1l	equ	0xFE1
    78                           bsr	equ	0xFE0
    79                           indf2	equ	0xFDF
    80                           postinc2	equ	0xFDE
    81                           postdec2	equ	0xFDD
    82                           preinc2	equ	0xFDC
    83                           plusw2	equ	0xFDB
    84                           fsr2h	equ	0xFDA
    85                           fsr2l	equ	0xFD9
    86                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                               Mon Dec 18 16:38:44 2023

                           PIR3 0EC8                           _getch 11E8                          isa$std 0001  
                   _int_handler 0008                        isa$xinst 0000  
