

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                                           Mon Dec 18 16:38:44 2023


     1                           	processor	18F47Q10
     2                           	pagewidth 132
     3                           	opt	flic
     4                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	udata_bank6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    12                           	psect	udata_bank7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    13                           	psect	udata_bank8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    14                           	psect	udata_bank9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    15                           	psect	udata_bank10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    16                           	psect	udata_bank11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    17                           	psect	udata_bank12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    18                           	psect	udata_bank14,global,class=BANK14,space=1,delta=1,lowdata,noexec
    19                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    20                           	psect	code,global,reloc=2,class=CODE,delta=1
    21                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    22                           	psect	edata,global,class=EEDATA,space=3,delta=1,noexec
    23                           	psect	text0,local,reloc=2,class=CODE,delta=1
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           	psect	edata
    27   000000                     stk_offset	set	0
    28   000000                     auto_size	set	0
    29                           
    30                           ; stack_auto defines a symbol /name/_offset which equates to the
    31                           ; stack offset of the auto object in question
    32   000000                     
    33                           ; stack_param defines a symbol /name/_offset which equates to the
    34                           ; stack offset of the parameter object in question
    35   000000                     
    36                           ; alloc_stack adjusts the SP to allocate space for auto objects
    37                           ; it also links in to the btemp symbol so that can be used
    38   000000                     
    39                           ; restore_stack adjusts the SP to remove all auto and parameter
    40                           ; objects from the stack prior to returning from a function
    41   000000                     
    42                           	psect	text0
    43   001086                     _config:
    44                           	callstack 0
    45                           
    46                           ;=============
    47                           ;CONFIGURE PORTA
    48                           ;=============
    49   001086  010F               	banksel	3970	;Seleciona o registrador LATA, ou seja, da porta A
    50   001088  6B82               	clrf	3970,b	; Set all LatchA bits to zero
    51   00108A  0E01               	movlw	1	; colocado o registrador w = 0b00000001
    52   00108C  010F               	banksel	3975	;; Chama o registrador TRISA , que indica se os pinos sao output ou input.
    53   00108E  6F87               	movwf	3975,b
    54   001090  0E01               	movlw	1
    55   001092  010F               	banksel	3852	;Chama o registrador ANSELA, que define os pinos que são analógicos e os que são digit
      +                          ais.
    56   001094  6F0C               	movwf	3852,b	; o pino ((PORTA) and 0FFh), 0, a é "1" -> analogico. Os restantes são zero.
    57                           
    58                           ;=====================
    59                           ;CONFIGURE PORTC
    60                           ;==================
    61   001096  010F               	banksel	3972	; seleciona o registrador da porta C, LATC
    62   001098  6B84               	clrf	3972,b	; Set all LatchD bits to zero
    63   00109A  010F               	banksel	3977
    64   00109C  6B89               	clrf	3977,b	;;All pins are output--- bits tds a zero
    65   00109E  8E89               	bsf	3977,7,c	;except ((PORTC) and 0FFh), 7, a, that will be used as RX - microchip specifies RX as 
      +                          input pin
    66                           
    67                           ; ou seja ((PORTC) and 0FFh), 7, a vai ligar ao RX ou seja o bit 7 vai tomar valor 1, ((PORTC) and 0
      +                          FFh), 7, a=1
    68   0010A0  010F               	banksel	3868
    69   0010A2  6B1C               	clrf	3868,b	;All digital pins conversao de analogio a f«digital, tds os pines a zero ent tudo digit
      +                          al
    70   0010A4  010E               	banksel	3830	; seleciona o registro RC4PPS
    71                           
    72                           ;((PORTC) and 0FFh), 4, a=pin 4 da porta C
    73                           ; PPS = pin periferico . QUEREMOS LIGAR ((PORTC) and 0FFh), 4, a A UM periferico que vai ser EUSAT1 
      +                          TX(TX=PINO DE TRANSMISSÃO)
    74                           ; para passarmos um valor para um registro, primeiro temos de o armazenar em W(0b00000001)
    75                           ;TABELA 17.2--> 0X09(hexadecimal). BINARIO=0b0001001
    76   0010A6  0E09               	movlw	9	; Q: WHAT VALUE MUST WE GIVE ((STATUS) and 0FFh), 6, a RC4PPS ((STATUS) and 0FFh), 6, a PUT
      +                           THE EUSART1 TX ((CWG1CON1) and 0FFh), 5, b PIN ((PORTC) and 0FFh), 4, a? HINT: look in the 17.2 sec
      +                          tion of the datasheet, table 17.2
    77   0010A8  6FF6               	movwf	3830,b	;place the EUSART1 (TX/CK) in ((PORTC) and 0FFh), 4, a
    78   0010AA  010E               	banksel	3760	;agr vamos ver onde está conectado o RX
    79                           
    80                           ; ((PORTC) and 0FFh), 7, a, BITS 4 e 3-- TEM QUE SER DA PORTA C--> 1 0 (respetivamente)
    81                           ; 2,1,0 ---> pin 7 ent ta tudo a 1,--> 1 1 1
    82                           ; os restantes sao neutro ent vao a 0
    83   0010AC  0E17               	movlw	23	; ; Q: WHAT VALUE MUST WE GIVE ((STATUS) and 0FFh), 6, a RX1PPS ((STATUS) and 0FFh), 6, a 
      +                          PUT THE EUSART1 RX ((CWG1CON1) and 0FFh), 5, b PIN ((PORTC) and 0FFh), 7, a? HINT: look in the PPS c
      +                          hapter of the datasheet
    84   0010AE  6FB0               	movwf	3760,b	;place the EUSART1 (RX) in ((PORTC) and 0FFh), 7, a
    85                           
    86                           ; =================
    87                           ; CONFIGURE CLOCK
    88                           ; ================
    89   0010B0  010E               	banksel	3795	; frequencia de controlo do osciloscopio
    90   0010B2  0E60               	movlw	96	; NOSC=0110(internal high speed osc) ; maxima voltagem
    91   0010B4  6FD3               	movwf	3795,b	; NDIV=0000 (divider=1, clk divided by 1)
    92   0010B6  010E               	banksel	3801	; voltagem de referencia
    93   0010B8  0E06               	movlw	6	; HFFRQ 0110 -> CLK=32MHz
    94   0010BA  6FD9               	movwf	3801,b
    95   0010BC  010E               	banksel	3799
    96   0010BE  0E40               	movlw	64	; internal clock @freq=OSCFRQ ativo
    97   0010C0  6FD7               	movwf	3799,b
    98                           
    99                           ;==============
   100                           ;CONFIGURE USART
   101                           ;===============
   102                           ;BR=9600 @ CLK=32MHz
   103                           ; Q: WHAT VALUE SHOULD WE PUT ((CWG1CON1) and 0FFh), 5, b SP1BRGL AND SP1BRG1H ((STATUS) and 0FFh), 
      +                          6, a GET A BAUD RATE OF 9600 BPS
   104                           ; FOR A CLOCK SPEED OF 32 MHZ ? HINT: CHECK SECTION 28.2
   105   0010C2  010F               	banksel	3994	; taxa de transmissão
   106   0010C4  0E33               	movlw	51	; 0x33 assincrone
   107   0010C6  6E9A               	movwf	3994,c
   108   0010C8  0E00               	movlw	0	; nao usamos nada que tenha mais q 8bits
   109   0010CA  6E9B               	movwf	3995,c
   110   0010CC  010F               	banksel	3997
   111   0010CE  0EA0               	movlw	160	; 8 data bits, TX enabled, ASYNC
   112   0010D0  6E9D               	movwf	3997,c
   113                           
   114 ;; Q: HERE YOU MUST ENABLE THE USART AND THE RECEIVER WITH REGISTER RC1STA
   115   0010D2  0E90               	movlw	144	;USART enabled, 8 data bits / enable receiver
   116   0010D4  010F               	banksel	3996
   117   0010D6  6E9C               	movwf	3996,c
   118                           
   119                           ; ;=============
   120                           ; ;CONFIGURE ADC
   121                           ; ;=============
   122                           ; BANKSEL ADPCH
   123                           ; MOVLW 0b00000000 ;set ((PORTA) and 0FFh), 0, a as ADC input
   124                           ; MOVWF ADPCH, 1
   125                           ;
   126                           ; BANKSEL ADREF
   127                           ; MOVLW 0b00000000 ;Vref set to vdd and vss
   128                           ; MOVWF ADREF, 1
   129                           ;
   130                           ; BANKSEL ADCLK
   131                           ; MOVLW 0b00001111 ; Q: SET THE ADC CLOCK FREQUENCY ((STATUS) and 0FFh), 6, a 1 MHZ, KNOWING THAT FO
      +                          SC = 32 MHZ
   132                           ; MOVWF ADCLK, 1
   133                           ;
   134                           ; BANKSEL ADCON0
   135                           ; MOVLW 0b10000000 ;Q: SET THE ADC ((STATUS) and 0FFh), 6, a: results left-justified, clock=Fosc/div
      +                          , non-continuous operation
   136                           ; MOVWF ADCON0, 1
   137                           ;
   138                           ;
   139                           ;
   140                           ; ;================
   141                           ; ;CONFIGURE TIMER0
   142                           ; ;================
   143                           ; BANKSEL T0CON0
   144                           ; CLRF T0CON0
   145                           ;
   146                           ; BANKSEL T0CON1
   147                           ; MOVLW 0b01101110
   148                           ; MOVWF T0CON1
   149                           ;
   150                           ;
   151                           ; BANKSEL TMR0L
   152                           ; CLRF TMR0L ;clear the counter
   153                           ;
   154                           ;===========
   155                           ; ENABLE INTERRUPTS
   156                           ;===============0
   157                           ;=================
   158                           ;ENABLE INTERRUPTS
   159                           ;=================
   160   0010D8  010E               	banksel	3781
   161   0010DA  9BC5               	bcf	3781,5,b	;clear timer interrupt flag
   162   0010DC  010E               	banksel	3782
   163   0010DE  91C6               	bcf	3782,0,b	;clear ADC interrupt flag
   164   0010E0  010E               	banksel	3784
   165   0010E2  9BC8               	bcf	3784,5,b	;clear RX1 interrupt flag
   166   0010E4  010E               	banksel	3773
   167   0010E6  8BBD               	bsf	3773,5,b	; Q: enable timer int
   168   0010E8  010E               	banksel	3774
   169   0010EA  81BE               	bsf	3774,0,b	; Q: enable adc int
   170   0010EC  010E               	banksel	3776
   171   0010EE  8BC0               	bsf	3776,5,b	; Q: enable RX1 int
   172   0010F0  010F               	banksel	4052
   173   0010F2  8ED4               	bsf	4052,7,c	;start timer 0
   174   0010F4  010F               	banksel	3931
   175   0010F6  8F5B               	bsf	3931,7,b	;ENABLE ADC
   176                           
   177                           ; q: here you must enable peripheral interruptions and
   178                           ; global interruptions
   179                           ; Dar enable às interrupcoues globais e perifericas
   180   0010F8  010F               	banksel	4082	; interruptor de controlo ; bit 7--> global --> 1
   181                           
   182                           ; bit 6__> periferico--> 1(queremos dar enable)
   183   0010FA  0EC7               	movlw	199	; 111 --> Pk qd o timer chega ao final ter de dar interrupte
   184   0010FC  6FF2               	movwf	4082,b
   185   0010FE  0012               	return	
   186                           
   187                           	psect	config
   188                           
   189                           ;Config register CONFIG1L @ 0x300000
   190                           ;	External Oscillator mode Selection bits
   191                           ;	FEXTOSC = 0x4, user specified literal
   192                           ;	Power-up default value for COSC bits
   193                           ;	RSTOSC = 0x7, unprogrammed default
   194   300000                     	org	3145728
   195   300000  FC                 	db	252
   196                           
   197                           ;Config register CONFIG1H @ 0x300001
   198                           ;	Clock Out Enable bit
   199                           ;	CLKOUTEN = 0x1, unprogrammed default
   200                           ;	Clock Switch Enable bit
   201                           ;	CSWEN = 0x1, user specified literal
   202                           ;	Fail-Safe Clock Monitor Enable bit
   203                           ;	FCMEN = 0x1, unprogrammed default
   204   300001                     	org	3145729
   205   300001  FF                 	db	255
   206                           
   207                           ;Config register CONFIG2L @ 0x300002
   208                           ;	unspecified, using default values
   209                           ;	Master Clear Enable bit
   210                           ;	MCLRE = 0x1, unprogrammed default
   211                           ;	Power-up Timer Enable bit
   212                           ;	PWRTE = 0x1, unprogrammed default
   213                           ;	Low-power BOR enable bit
   214                           ;	LPBOREN = 0x1, unprogrammed default
   215                           ;	Brown-out Reset Enable bits
   216                           ;	BOREN = 0x3, unprogrammed default
   217   300002                     	org	3145730
   218   300002  FF                 	db	255
   219                           
   220                           ;Config register CONFIG2H @ 0x300003
   221                           ;	unspecified, using default values
   222                           ;	Brown Out Reset Voltage selection bits
   223                           ;	BORV = 0x3, unprogrammed default
   224                           ;	ZCD Disable bit
   225                           ;	ZCD = 0x1, unprogrammed default
   226                           ;	PPSLOCK bit One-Way Set Enable bit
   227                           ;	PPS1WAY = 0x1, unprogrammed default
   228                           ;	Stack Full/Underflow Reset Enable bit
   229                           ;	STVREN = 0x1, unprogrammed default
   230                           ;	Extended Instruction Set Enable bit
   231                           ;	XINST = 0x1, unprogrammed default
   232   300003                     	org	3145731
   233   300003  FF                 	db	255
   234                           
   235                           ;Config register CONFIG3L @ 0x300004
   236                           ;	WDT Period Select bits
   237                           ;	WDTCPS = 0x1F, unprogrammed default
   238                           ;	WDT operating mode
   239                           ;	WDTE = OFF, WDT Disabled
   240   300004                     	org	3145732
   241   300004  9F                 	db	159
   242                           
   243                           ;Config register CONFIG3H @ 0x300005
   244                           ;	unspecified, using default values
   245                           ;	WDT Window Select bits
   246                           ;	WDTCWS = 0x7, unprogrammed default
   247                           ;	WDT input clock selector
   248                           ;	WDTCCS = 0x7, unprogrammed default
   249   300005                     	org	3145733
   250   300005  FF                 	db	255
   251                           
   252                           ;Config register CONFIG4L @ 0x300006
   253                           ;	unspecified, using default values
   254                           ;	Write Protection Block 0
   255                           ;	WRT0 = 0x1, unprogrammed default
   256                           ;	Write Protection Block 1
   257                           ;	WRT1 = 0x1, unprogrammed default
   258                           ;	Write Protection Block 2
   259                           ;	WRT2 = 0x1, unprogrammed default
   260                           ;	Write Protection Block 3
   261                           ;	WRT3 = 0x1, unprogrammed default
   262                           ;	Write Protection Block 4
   263                           ;	WRT4 = 0x1, unprogrammed default
   264                           ;	Write Protection Block 5
   265                           ;	WRT5 = 0x1, unprogrammed default
   266                           ;	Write Protection Block 6
   267                           ;	WRT6 = 0x1, unprogrammed default
   268                           ;	Write Protection Block 7
   269                           ;	WRT7 = 0x1, unprogrammed default
   270   300006                     	org	3145734
   271   300006  FF                 	db	255
   272                           
   273                           ;Config register CONFIG4H @ 0x300007
   274                           ;	unspecified, using default values
   275                           ;	Configuration Register Write Protection bit
   276                           ;	WRTC = 0x1, unprogrammed default
   277                           ;	Boot Block Write Protection bit
   278                           ;	WRTB = 0x1, unprogrammed default
   279                           ;	Data EEPROM Write Protection bit
   280                           ;	WRTD = 0x1, unprogrammed default
   281                           ;	Scanner Enable bit
   282                           ;	SCANE = 0x1, unprogrammed default
   283                           ;	Low Voltage Programming Enable bit
   284                           ;	LVP = 0x1, unprogrammed default
   285   300007                     	org	3145735
   286   300007  FF                 	db	255
   287                           
   288                           ;Config register CONFIG5L @ 0x300008
   289                           ;	unspecified, using default values
   290                           ;	UserNVM Program Memory Code Protection bit
   291                           ;	CP = 0x1, unprogrammed default
   292                           ;	DataNVM Memory Code Protection bit
   293                           ;	CPD = 0x1, unprogrammed default
   294   300008                     	org	3145736
   295   300008  FF                 	db	255
   296                           
   297                           ;Config register CONFIG5H @ 0x300009
   298                           ;	unspecified, using default values
   299   300009                     	org	3145737
   300   300009  FF                 	db	255
   301                           
   302                           ;Config register CONFIG6L @ 0x30000A
   303                           ;	unspecified, using default values
   304                           ;	Table Read Protection Block 0
   305                           ;	EBTR0 = 0x1, unprogrammed default
   306                           ;	Table Read Protection Block 1
   307                           ;	EBTR1 = 0x1, unprogrammed default
   308                           ;	Table Read Protection Block 2
   309                           ;	EBTR2 = 0x1, unprogrammed default
   310                           ;	Table Read Protection Block 3
   311                           ;	EBTR3 = 0x1, unprogrammed default
   312                           ;	Table Read Protection Block 4
   313                           ;	EBTR4 = 0x1, unprogrammed default
   314                           ;	Table Read Protection Block 5
   315                           ;	EBTR5 = 0x1, unprogrammed default
   316                           ;	Table Read Protection Block 6
   317                           ;	EBTR6 = 0x1, unprogrammed default
   318                           ;	Table Read Protection Block 7
   319                           ;	EBTR7 = 0x1, unprogrammed default
   320   30000A                     	org	3145738
   321   30000A  FF                 	db	255
   322                           
   323                           ;Config register CONFIG6H @ 0x30000B
   324                           ;	unspecified, using default values
   325                           ;	Boot Block Table Read Protection bit
   326                           ;	EBTRB = 0x1, unprogrammed default
   327   30000B                     	org	3145739
   328   30000B  FF                 	db	255
   329                           tosu	equ	0xFFF
   330                           tosh	equ	0xFFE
   331                           tosl	equ	0xFFD
   332                           stkptr	equ	0xFFC
   333                           pclatu	equ	0xFFB
   334                           pclath	equ	0xFFA
   335                           pcl	equ	0xFF9
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           prodh	equ	0xFF4
   341                           prodl	equ	0xFF3
   342                           indf0	equ	0xFEF
   343                           postinc0	equ	0xFEE
   344                           postdec0	equ	0xFED
   345                           preinc0	equ	0xFEC
   346                           plusw0	equ	0xFEB
   347                           fsr0h	equ	0xFEA
   348                           fsr0l	equ	0xFE9
   349                           wreg	equ	0xFE8
   350                           indf1	equ	0xFE7
   351                           postinc1	equ	0xFE6
   352                           postdec1	equ	0xFE5
   353                           preinc1	equ	0xFE4
   354                           plusw1	equ	0xFE3
   355                           fsr1h	equ	0xFE2
   356                           fsr1l	equ	0xFE1
   357                           bsr	equ	0xFE0
   358                           indf2	equ	0xFDF
   359                           postinc2	equ	0xFDE
   360                           postdec2	equ	0xFDD
   361                           preinc2	equ	0xFDC
   362                           plusw2	equ	0xFDB
   363                           fsr2h	equ	0xFDA
   364                           fsr2l	equ	0xFD9
   365                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                               Mon Dec 18 16:38:44 2023

                           LATA 0F82                             LATC 0F84                             PIE0 0EBD  
                           PIE1 0EBE                             PIE3 0EC0                             PIR0 0EC5  
                           PIR1 0EC6                             PIR3 0EC8                            OSCEN 0ED7  
                          TRISA 0F87                            TRISC 0F89                           ADCON0 0F5B  
                         ANSELA 0F0C                           ANSELC 0F1C                           T0CON0 0FD4  
                         RC1STA 0F9C                           RC4PPS 0EF6                           INTCON 0FF2  
                         OSCFRQ 0ED9                           RX1PPS 0EB0                           TX1STA 0F9D  
                        SP1BRGH 0F9B                          SP1BRGL 0F9A                          OSCCON1 0ED3  
                        _config 1086                          isa$std 0001                        isa$xinst 0000  
