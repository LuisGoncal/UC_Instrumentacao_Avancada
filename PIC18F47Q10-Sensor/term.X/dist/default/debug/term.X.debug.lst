

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 29 20:13:30 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21   000000                     
    22                           ; Generated 23/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47Q10 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _PIR3bits	set	3784
    57   000000                     _RC1REG	set	3992
    58   000000                     _TX1REG	set	3993
    59                           
    60                           	psect	smallconst
    61   000F00                     __psmallconst:
    62                           	callstack 0
    63   000F00  00                 	db	0
    64   000F01                     STR_4:
    65   000F01  4F                 	db	79	;'O'
    66   000F02  75                 	db	117	;'u'
    67   000F03  74                 	db	116	;'t'
    68   000F04  70                 	db	112	;'p'
    69   000F05  75                 	db	117	;'u'
    70   000F06  74                 	db	116	;'t'
    71   000F07  20                 	db	32
    72   000F08  6F                 	db	111	;'o'
    73   000F09  66                 	db	102	;'f'
    74   000F0A  20                 	db	32
    75   000F0B  66                 	db	102	;'f'
    76   000F0C  75                 	db	117	;'u'
    77   000F0D  6E                 	db	110	;'n'
    78   000F0E  63                 	db	99	;'c'
    79   000F0F  74                 	db	116	;'t'
    80   000F10  69                 	db	105	;'i'
    81   000F11  6F                 	db	111	;'o'
    82   000F12  6E                 	db	110	;'n'
    83   000F13  20                 	db	32
    84   000F14  3D                 	db	61	;'='
    85   000F15  20                 	db	32
    86   000F16  00                 	db	0
    87   000F17                     STR_1:
    88   000F17  47                 	db	71	;'G'
    89   000F18  6C                 	db	108	;'l'
    90   000F19  6F                 	db	111	;'o'
    91   000F1A  62                 	db	98	;'b'
    92   000F1B  61                 	db	97	;'a'
    93   000F1C  6C                 	db	108	;'l'
    94   000F1D  20                 	db	32
    95   000F1E  76                 	db	118	;'v'
    96   000F1F  61                 	db	97	;'a'
    97   000F20  72                 	db	114	;'r'
    98   000F21  69                 	db	105	;'i'
    99   000F22  61                 	db	97	;'a'
   100   000F23  62                 	db	98	;'b'
   101   000F24  6C                 	db	108	;'l'
   102   000F25  65                 	db	101	;'e'
   103   000F26  20                 	db	32
   104   000F27  3D                 	db	61	;'='
   105   000F28  20                 	db	32
   106   000F29  00                 	db	0
   107   000F2A                     STR_10:
   108   000F2A  54                 	db	84	;'T'
   109   000F2B  72                 	db	114	;'r'
   110   000F2C  61                 	db	97	;'a'
   111   000F2D  6E                 	db	110	;'n'
   112   000F2E  73                 	db	115	;'s'
   113   000F2F  6D                 	db	109	;'m'
   114   000F30  69                 	db	105	;'i'
   115   000F31  74                 	db	116	;'t'
   116   000F32  74                 	db	116	;'t'
   117   000F33  65                 	db	101	;'e'
   118   000F34  64                 	db	100	;'d'
   119   000F35  3A                 	db	58	;':'
   120   000F36  20                 	db	32
   121   000F37  00                 	db	0
   122   000F38                     STR_7:
   123   000F38  52                 	db	82	;'R'
   124   000F39  65                 	db	101	;'e'
   125   000F3A  63                 	db	99	;'c'
   126   000F3B  65                 	db	101	;'e'
   127   000F3C  69                 	db	105	;'i'
   128   000F3D  76                 	db	118	;'v'
   129   000F3E  65                 	db	101	;'e'
   130   000F3F  64                 	db	100	;'d'
   131   000F40  3A                 	db	58	;':'
   132   000F41  20                 	db	32
   133   000F42  00                 	db	0
   134   000F43                     STR_8:
   135   000F43  25                 	db	37
   136   000F44  63                 	db	99	;'c'
   137   000F45  00                 	db	0
   138   000F46                     STR_2:
   139   000F46  25                 	db	37
   140   000F47  64                 	db	100	;'d'
   141   000F48  00                 	db	0
   142   000F49                     STR_3:
   143   000F49  0A                 	db	10
   144   000F4A  00                 	db	0
   145   000F4B  00                 	db	0	; dummy byte at the end
   146   000000                     
   147                           ; #config settings
   148                           
   149                           	psect	cinit
   150   0015B8                     __pcinit:
   151                           	callstack 0
   152   0015B8                     start_initialization:
   153                           	callstack 0
   154   0015B8                     __initialization:
   155                           	callstack 0
   156                           
   157                           ; Clear objects allocated to COMRAM (40 bytes)
   158   0015B8  EE00  F001         	lfsr	0,__pbssCOMRAM
   159   0015BC  0E28               	movlw	40
   160   0015BE                     clear_0:
   161   0015BE  6AEE               	clrf	postinc0,c
   162   0015C0  06E8               	decf	wreg,f,c
   163   0015C2  E1FD               	bnz	clear_0
   164   0015C4                     end_of_initialization:
   165                           	callstack 0
   166   0015C4                     __end_of__initialization:
   167                           	callstack 0
   168   0015C4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   169   0015C6  6EF8               	movwf	tblptru,c
   170   0015C8  0E0F               	movlw	high __Lsmallconst
   171   0015CA  6EF7               	movwf	tblptrh,c
   172   0015CC  0100               	movlb	0
   173   0015CE  EFA6  F008         	goto	_main	;jump to C main() function
   174                           
   175                           	psect	bssCOMRAM
   176   000001                     __pbssCOMRAM:
   177                           	callstack 0
   178   000001                     _dbuf:
   179                           	callstack 0
   180   000001                     	ds	32
   181   000021                     _width:
   182                           	callstack 0
   183   000021                     	ds	2
   184   000023                     _prec:
   185                           	callstack 0
   186   000023                     	ds	2
   187   000025                     _var_global:
   188                           	callstack 0
   189   000025                     	ds	2
   190   000027                     _flags:
   191                           	callstack 0
   192   000027                     	ds	1
   193   000028                     _get_char:
   194                           	callstack 0
   195   000028                     	ds	1
   196                           
   197                           	psect	cstackCOMRAM
   198   000029                     __pcstackCOMRAM:
   199                           	callstack 0
   200   000029                     ?_getch:
   201                           	callstack 0
   202   000029                     ?___awdiv:
   203                           	callstack 0
   204   000029                     ?___awmod:
   205                           	callstack 0
   206   000029                     putch@byte:
   207                           	callstack 0
   208   000029                     ___awdiv@dividend:
   209                           	callstack 0
   210   000029                     ___awmod@dividend:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x0
   214   000029                     	ds	1
   215   00002A                     fputc@c:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x1
   219   00002A                     	ds	1
   220   00002B                     ___awdiv@divisor:
   221                           	callstack 0
   222   00002B                     ___awmod@divisor:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x2
   226   00002B                     	ds	1
   227   00002C                     fputc@fp:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x3
   231   00002C                     	ds	1
   232   00002D                     ___awdiv@counter:
   233                           	callstack 0
   234   00002D                     ___awmod@counter:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x4
   238   00002D                     	ds	1
   239   00002E                     ??_fputc:
   240   00002E                     ___awdiv@sign:
   241                           	callstack 0
   242   00002E                     ___awmod@sign:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x5
   246   00002E                     	ds	1
   247   00002F                     ?_abs:
   248                           	callstack 0
   249   00002F                     ___awdiv@quotient:
   250                           	callstack 0
   251   00002F                     abs@a:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x6
   255   00002F                     	ds	2
   256   000031                     ??_abs:
   257                           
   258                           ; 1 bytes @ 0x8
   259   000031                     	ds	2
   260   000033                     vfpfcnvrt@fp:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0xA
   264   000033                     	ds	2
   265   000035                     vfpfcnvrt@fmt:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0xC
   269   000035                     	ds	1
   270   000036                     vfpfcnvrt@ap:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0xD
   274   000036                     	ds	1
   275   000037                     ??_vfpfcnvrt:
   276                           
   277                           ; 1 bytes @ 0xE
   278   000037                     	ds	1
   279   000038                     vfpfcnvrt@done:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0xF
   283   000038                     	ds	1
   284   000039                     vfpfcnvrt@cp:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x10
   288   000039                     	ds	1
   289   00003A                     vfpfcnvrt@convarg:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0x11
   293   00003A                     	ds	4
   294   00003E                     vfpfcnvrt@c:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x15
   298   00003E                     	ds	1
   299   00003F                     ?_vfprintf:
   300                           	callstack 0
   301   00003F                     vfprintf@fp:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x16
   305   00003F                     	ds	2
   306   000041                     vfprintf@fmt:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x18
   310   000041                     	ds	1
   311   000042                     vfprintf@ap:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x19
   315   000042                     	ds	1
   316   000043                     vfprintf@cfmt:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x1A
   320   000043                     	ds	1
   321   000044                     ?_printf:
   322                           	callstack 0
   323   000044                     printf@fmt:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x1B
   327   000044                     	ds	3
   328   000047                     printf@ap:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x1E
   332   000047                     	ds	1
   333   000048                     ??_main:
   334                           
   335                           ; 1 bytes @ 0x1F
   336   000048                     	ds	2
   337   00004A                     main@j:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x21
   341   00004A                     	ds	2
   342   00004C                     main@result:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x23
   346   00004C                     	ds	2
   347                           
   348 ;;
   349 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   350 ;;
   351 ;; *************** function _main *****************
   352 ;; Defined at:
   353 ;;		line 44 in file "main2.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;  j               2   33[COMRAM] int 
   358 ;;  result          2   35[COMRAM] volatile unsigned int 
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   369 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   370 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   371 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   372 ;;Total ram usage:        6 bytes
   373 ;; Hardware stack levels required when called: 6
   374 ;; This function calls:
   375 ;;		_config
   376 ;;		_pass_variable_between_C_and_ASM
   377 ;;		_printf
   378 ;; This function is called by:
   379 ;;		Startup code after reset
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           	psect	text0
   384   00114C                     __ptext0:
   385                           	callstack 0
   386   00114C                     _main:
   387                           	callstack 25
   388   00114C                     
   389                           ;main2.c: 46:     config();
   390   00114C  EC40  F00A         	call	_config	;wreg free
   391                           
   392                           ;main2.c: 49:     volatile unsigned int result = pass_variable_between_C_and_ASM(3);
   393   001150  0E03               	movlw	3
   394   001152  ECF6  F00A         	call	_pass_variable_between_C_and_ASM
   395   001156  6E48               	movwf	??_main^0,c
   396   001158  5048               	movf	??_main^0,w,c
   397   00115A  6E4C               	movwf	main@result^0,c	;volatile
   398   00115C  6A4D               	clrf	(main@result+1)^0,c	;volatile
   399   00115E                     
   400                           ;main2.c: 53:     int j = 0;
   401   00115E  0E00               	movlw	0
   402   001160  6E4B               	movwf	(main@j+1)^0,c
   403   001162  0E00               	movlw	0
   404   001164  6E4A               	movwf	main@j^0,c
   405   001166                     l1183:
   406                           
   407                           ;main2.c: 61:         _delay((unsigned long)((50)*(32000000/4000.0)));
   408   001166  0E03               	movlw	3
   409   001168  6E49               	movwf	(??_main+1)^0,c
   410   00116A  0E08               	movlw	8
   411   00116C  6E48               	movwf	??_main^0,c
   412   00116E  0E77               	movlw	119
   413   001170                     u657:
   414   001170  2EE8               	decfsz	wreg,f,c
   415   001172  D7FE               	bra	u657
   416   001174  2E48               	decfsz	??_main^0,f,c
   417   001176  D7FC               	bra	u657
   418   001178  2E49               	decfsz	(??_main+1)^0,f,c
   419   00117A  D7FA               	bra	u657
   420   00117C  0000               	nop	
   421   00117E                     
   422                           ;main2.c: 63:         if (j==40){
   423   00117E  0E28               	movlw	40
   424   001180  184A               	xorwf	main@j^0,w,c
   425   001182  104B               	iorwf	(main@j+1)^0,w,c
   426   001184  A4D8               	btfss	status,2,c
   427   001186  EFC7  F008         	goto	u631
   428   00118A  EFC9  F008         	goto	u630
   429   00118E                     u631:
   430   00118E  EFED  F008         	goto	l1191
   431   001192                     u630:
   432   001192                     
   433                           ;main2.c: 64:             printf("Global variable = ");
   434   001192  0E17               	movlw	low STR_1
   435   001194  6E44               	movwf	printf@fmt^0,c
   436   001196  ECE9  F00A         	call	_printf	;wreg free
   437                           
   438                           ;main2.c: 65:             printf("%d", var_global);
   439   00119A  0E46               	movlw	low STR_2
   440   00119C  6E44               	movwf	printf@fmt^0,c
   441   00119E  C025  F045         	movff	_var_global,?_printf+1
   442   0011A2  C026  F046         	movff	_var_global+1,?_printf+2
   443   0011A6  ECE9  F00A         	call	_printf	;wreg free
   444                           
   445                           ;main2.c: 66:             printf("\n");
   446   0011AA  0E49               	movlw	low STR_3
   447   0011AC  6E44               	movwf	printf@fmt^0,c
   448   0011AE  ECE9  F00A         	call	_printf	;wreg free
   449                           
   450                           ;main2.c: 67:             printf("Output of function = ");
   451   0011B2  0E01               	movlw	low STR_4
   452   0011B4  6E44               	movwf	printf@fmt^0,c
   453   0011B6  ECE9  F00A         	call	_printf	;wreg free
   454                           
   455                           ;main2.c: 68:             printf("%d", result);
   456   0011BA  0E46               	movlw	low STR_2
   457   0011BC  6E44               	movwf	printf@fmt^0,c
   458   0011BE  C04C  F045         	movff	main@result,?_printf+1	;volatile
   459   0011C2  C04D  F046         	movff	main@result+1,?_printf+2	;volatile
   460   0011C6  ECE9  F00A         	call	_printf	;wreg free
   461                           
   462                           ;main2.c: 69:             printf("\n");
   463   0011CA  0E49               	movlw	low STR_3
   464   0011CC  6E44               	movwf	printf@fmt^0,c
   465   0011CE  ECE9  F00A         	call	_printf	;wreg free
   466   0011D2                     
   467                           ;main2.c: 70:             j = 0;
   468   0011D2  0E00               	movlw	0
   469   0011D4  6E4B               	movwf	(main@j+1)^0,c
   470   0011D6  0E00               	movlw	0
   471   0011D8  6E4A               	movwf	main@j^0,c
   472   0011DA                     l1191:
   473                           
   474                           ;main2.c: 73:         j=j+1;
   475   0011DA  0E01               	movlw	1
   476   0011DC  244A               	addwf	main@j^0,w,c
   477   0011DE  6E4A               	movwf	main@j^0,c
   478   0011E0  0E00               	movlw	0
   479   0011E2  204B               	addwfc	(main@j+1)^0,w,c
   480   0011E4  6E4B               	movwf	(main@j+1)^0,c
   481   0011E6                     
   482                           ;main2.c: 82:         if(get_char != 0)
   483   0011E6  5028               	movf	_get_char^0,w,c
   484   0011E8  B4D8               	btfsc	status,2,c
   485   0011EA  EFF9  F008         	goto	u641
   486   0011EE  EFFB  F008         	goto	u640
   487   0011F2                     u641:
   488   0011F2  EFB3  F008         	goto	l1183
   489   0011F6                     u640:
   490   0011F6                     
   491                           ;main2.c: 83:         {;main2.c: 84:             printf("Received: ");
   492   0011F6  0E38               	movlw	low STR_7
   493   0011F8  6E44               	movwf	printf@fmt^0,c
   494   0011FA  ECE9  F00A         	call	_printf	;wreg free
   495                           
   496                           ;main2.c: 85:             printf("%c",get_char);
   497   0011FE  0E43               	movlw	low STR_8
   498   001200  6E44               	movwf	printf@fmt^0,c
   499   001202  C028  F045         	movff	_get_char,?_printf+1
   500   001206  6A46               	clrf	(?_printf+2)^0,c
   501   001208  ECE9  F00A         	call	_printf	;wreg free
   502                           
   503                           ;main2.c: 86:             printf("\n");
   504   00120C  0E49               	movlw	low STR_3
   505   00120E  6E44               	movwf	printf@fmt^0,c
   506   001210  ECE9  F00A         	call	_printf	;wreg free
   507                           
   508                           ;main2.c: 87:             printf("Transmitted: ");
   509   001214  0E2A               	movlw	low STR_10
   510   001216  6E44               	movwf	printf@fmt^0,c
   511   001218  ECE9  F00A         	call	_printf	;wreg free
   512   00121C                     
   513                           ;main2.c: 88:             get_char = get_char+1;
   514   00121C  2828               	incf	_get_char^0,w,c
   515   00121E  6E28               	movwf	_get_char^0,c
   516   001220                     
   517                           ;main2.c: 89:             printf("%c",get_char);
   518   001220  0E43               	movlw	low STR_8
   519   001222  6E44               	movwf	printf@fmt^0,c
   520   001224  C028  F045         	movff	_get_char,?_printf+1
   521   001228  6A46               	clrf	(?_printf+2)^0,c
   522   00122A  ECE9  F00A         	call	_printf	;wreg free
   523   00122E                     
   524                           ;main2.c: 90:             printf("\n");
   525   00122E  0E49               	movlw	low STR_3
   526   001230  6E44               	movwf	printf@fmt^0,c
   527   001232  ECE9  F00A         	call	_printf	;wreg free
   528   001236                     
   529                           ;main2.c: 91:             get_char = 0;
   530   001236  0E00               	movlw	0
   531   001238  6E28               	movwf	_get_char^0,c
   532   00123A  EFB3  F008         	goto	l1183
   533   00123E  EF23  F000         	goto	start
   534   001242                     __end_of_main:
   535                           	callstack 0
   536                           
   537 ;; *************** function _printf *****************
   538 ;; Defined at:
   539 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\printf.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
   542 ;;		 -> STR_12(2), STR_11(3), STR_10(14), STR_9(2), 
   543 ;;		 -> STR_8(3), STR_7(11), STR_6(2), STR_5(3), 
   544 ;;		 -> STR_4(22), STR_3(2), STR_2(3), STR_1(19), 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  ret             2    0        int 
   547 ;;  ap              1   30[COMRAM] PTR void [1]
   548 ;;		 -> ?_printf(2), 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  2   27[COMRAM] int 
   551 ;; Registers used:
   552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   558 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   561 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   562 ;;Total ram usage:        4 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; Hardware stack levels required when called: 5
   565 ;; This function calls:
   566 ;;		_vfprintf
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text1
   573   0015D2                     __ptext1:
   574                           	callstack 0
   575   0015D2                     _printf:
   576                           	callstack 25
   577   0015D2  0E45               	movlw	low (?_printf+1)
   578   0015D4  6E47               	movwf	printf@ap^0,c
   579   0015D6  0E00               	movlw	0
   580   0015D8  6E3F               	movwf	vfprintf@fp^0,c
   581   0015DA  0E00               	movlw	0
   582   0015DC  6E40               	movwf	(vfprintf@fp+1)^0,c
   583   0015DE  C044  F041         	movff	printf@fmt,vfprintf@fmt
   584   0015E2  0E47               	movlw	low printf@ap
   585   0015E4  6E42               	movwf	vfprintf@ap^0,c
   586   0015E6  EC90  F00A         	call	_vfprintf	;wreg free
   587   0015EA  0012               	return		;funcret
   588   0015EC                     __end_of_printf:
   589                           	callstack 0
   590                           
   591 ;; *************** function _vfprintf *****************
   592 ;; Defined at:
   593 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
   596 ;;		 -> NULL(0), 
   597 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
   598 ;;		 -> STR_12(2), STR_11(3), STR_10(14), STR_9(2), 
   599 ;;		 -> STR_8(3), STR_7(11), STR_6(2), STR_5(3), 
   600 ;;		 -> STR_4(22), STR_3(2), STR_2(3), STR_1(19), 
   601 ;;  ap              1   25[COMRAM] PTR PTR void 
   602 ;;		 -> printf@ap(1), 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
   605 ;;		 -> STR_12(2), STR_11(3), STR_10(14), STR_9(2), 
   606 ;;		 -> STR_8(3), STR_7(11), STR_6(2), STR_5(3), 
   607 ;;		 -> STR_4(22), STR_3(2), STR_2(3), STR_1(19), 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  2   22[COMRAM] int 
   610 ;; Registers used:
   611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   620 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   621 ;;Total ram usage:        5 bytes
   622 ;; Hardware stack levels used: 1
   623 ;; Hardware stack levels required when called: 4
   624 ;; This function calls:
   625 ;;		_vfpfcnvrt
   626 ;; This function is called by:
   627 ;;		_printf
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text2
   632   001520                     __ptext2:
   633                           	callstack 0
   634   001520                     _vfprintf:
   635                           	callstack 25
   636   001520                     
   637                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   638   001520  C041  F043         	movff	vfprintf@fmt,vfprintf@cfmt
   639                           
   640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   641   001524  EF9E  F00A         	goto	l1167
   642   001528                     l1165:
   643                           
   644                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   645   001528  C03F  F033         	movff	vfprintf@fp,vfpfcnvrt@fp
   646   00152C  C040  F034         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   647   001530  0E43               	movlw	low vfprintf@cfmt
   648   001532  6E35               	movwf	vfpfcnvrt@fmt^0,c
   649   001534  C042  F036         	movff	vfprintf@ap,vfpfcnvrt@ap
   650   001538  ECA6  F007         	call	_vfpfcnvrt	;wreg free
   651   00153C                     l1167:
   652                           
   653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   654   00153C  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
   655   001540                     	if	0	;There is only one active tblptr byte
   656   001540                     	endif
   657   001540                     	if	0	;tblptru may be non-zero
   658   001540                     	endif
   659   001540                     	if	0	;tblptru may be non-zero
   660   001540                     	endif
   661   001540  0008               	tblrd		*
   662   001542  50F5               	movf	tablat,w,c
   663   001544  0900               	iorlw	0
   664   001546  A4D8               	btfss	status,2,c
   665   001548  EFA8  F00A         	goto	u621
   666   00154C  EFAA  F00A         	goto	u620
   667   001550                     u621:
   668   001550  EF94  F00A         	goto	l1165
   669   001554                     u620:
   670   001554                     
   671                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   672   001554  0E00               	movlw	0
   673   001556  6E40               	movwf	(?_vfprintf+1)^0,c
   674   001558  0E00               	movlw	0
   675   00155A  6E3F               	movwf	?_vfprintf^0,c
   676   00155C  0012               	return		;funcret
   677   00155E                     __end_of_vfprintf:
   678                           	callstack 0
   679                           
   680 ;; *************** function _vfpfcnvrt *****************
   681 ;; Defined at:
   682 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
   685 ;;		 -> NULL(0), 
   686 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
   687 ;;		 -> vfprintf@cfmt(1), 
   688 ;;  ap              1   13[COMRAM] PTR PTR void 
   689 ;;		 -> printf@ap(1), 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  convarg         4   17[COMRAM] struct .
   692 ;;  c               1   21[COMRAM] unsigned char 
   693 ;;  cp              1   16[COMRAM] PTR unsigned char 
   694 ;;		 -> STR_12(2), STR_11(3), STR_10(14), STR_9(2), 
   695 ;;		 -> STR_8(3), STR_7(11), STR_6(2), STR_5(3), 
   696 ;;		 -> STR_4(22), STR_3(2), STR_2(3), STR_1(19), 
   697 ;;  done            1   15[COMRAM] _Bool 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   708 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   710 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   711 ;;Total ram usage:       12 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; Hardware stack levels required when called: 3
   714 ;; This function calls:
   715 ;;		___awdiv
   716 ;;		___awmod
   717 ;;		_abs
   718 ;;		_fputc
   719 ;; This function is called by:
   720 ;;		_vfprintf
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text3
   725   000F4C                     __ptext3:
   726                           	callstack 0
   727   000F4C                     _vfpfcnvrt:
   728                           	callstack 25
   729   000F4C                     
   730                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   731   000F4C  5035               	movf	vfpfcnvrt@fmt^0,w,c
   732   000F4E  6ED9               	movwf	fsr2l,c
   733   000F50  6ADA               	clrf	fsr2h,c
   734   000F52  CFDF FFF6          	movff	indf2,tblptrl
   735   000F56                     	if	0	;There is only one active tblptr byte
   736   000F56                     	endif
   737   000F56                     	if	0	;tblptru may be non-zero
   738   000F56                     	endif
   739   000F56                     	if	0	;tblptru may be non-zero
   740   000F56                     	endif
   741   000F56  0008               	tblrd		*
   742   000F58  50F5               	movf	tablat,w,c
   743   000F5A  0A25               	xorlw	37
   744   000F5C  A4D8               	btfss	status,2,c
   745   000F5E  EFB3  F007         	goto	u511
   746   000F62  EFB5  F007         	goto	u510
   747   000F66                     u511:
   748   000F66  EF94  F008         	goto	l1157
   749   000F6A                     u510:
   750   000F6A                     
   751                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   752   000F6A  5035               	movf	vfpfcnvrt@fmt^0,w,c
   753   000F6C  6ED9               	movwf	fsr2l,c
   754   000F6E  6ADA               	clrf	fsr2h,c
   755   000F70  2ADF               	incf	indf2,f,c
   756   000F72                     
   757                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   758   000F72  0E00               	movlw	0
   759   000F74  6E22               	movwf	(_width+1)^0,c
   760   000F76  0E00               	movlw	0
   761   000F78  6E21               	movwf	_width^0,c
   762   000F7A  C021  F027         	movff	_width,_flags
   763   000F7E                     
   764                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   765   000F7E  6823               	setf	_prec^0,c
   766   000F80  6824               	setf	(_prec+1)^0,c
   767   000F82                     
   768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
   769   000F82  5035               	movf	vfpfcnvrt@fmt^0,w,c
   770   000F84  6ED9               	movwf	fsr2l,c
   771   000F86  6ADA               	clrf	fsr2h,c
   772   000F88  CFDF FFF6          	movff	indf2,tblptrl
   773   000F8C                     	if	0	;There is only one active tblptr byte
   774   000F8C                     	endif
   775   000F8C                     	if	0	;tblptru may be non-zero
   776   000F8C                     	endif
   777   000F8C                     	if	0	;tblptru may be non-zero
   778   000F8C                     	endif
   779   000F8C  0008               	tblrd		*
   780   000F8E  50F5               	movf	tablat,w,c
   781   000F90  0A63               	xorlw	99
   782   000F92  A4D8               	btfss	status,2,c
   783   000F94  EFCE  F007         	goto	u521
   784   000F98  EFD0  F007         	goto	u520
   785   000F9C                     u521:
   786   000F9C  EFE9  F007         	goto	l1121
   787   000FA0                     u520:
   788   000FA0                     
   789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
   790   000FA0  5035               	movf	vfpfcnvrt@fmt^0,w,c
   791   000FA2  6ED9               	movwf	fsr2l,c
   792   000FA4  6ADA               	clrf	fsr2h,c
   793   000FA6  2ADF               	incf	indf2,f,c
   794   000FA8                     
   795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
   796   000FA8  5036               	movf	vfpfcnvrt@ap^0,w,c
   797   000FAA  6ED9               	movwf	fsr2l,c
   798   000FAC  6ADA               	clrf	fsr2h,c
   799   000FAE  50DF               	movf	indf2,w,c
   800   000FB0  2ADF               	incf	indf2,f,c
   801   000FB2  2ADF               	incf	indf2,f,c
   802   000FB4  6ED9               	movwf	fsr2l,c
   803   000FB6  6ADA               	clrf	fsr2h,c
   804   000FB8  50DF               	movf	indf2,w,c
   805   000FBA  6E3E               	movwf	vfpfcnvrt@c^0,c
   806   000FBC                     
   807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1277:    fputc(c,
      +                           fp);
   808   000FBC  C03E  F02A         	movff	vfpfcnvrt@c,fputc@c
   809   000FC0  6A2B               	clrf	(fputc@c+1)^0,c
   810   000FC2  C033  F02C         	movff	vfpfcnvrt@fp,fputc@fp
   811   000FC6  C034  F02D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   812   000FCA  EC21  F009         	call	_fputc	;wreg free
   813   000FCE  EFA5  F008         	goto	l749
   814   000FD2                     l1121:
   815                           
   816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   817   000FD2  5035               	movf	vfpfcnvrt@fmt^0,w,c
   818   000FD4  6ED9               	movwf	fsr2l,c
   819   000FD6  6ADA               	clrf	fsr2h,c
   820   000FD8  50DF               	movf	indf2,w,c
   821   000FDA  6E39               	movwf	vfpfcnvrt@cp^0,c
   822   000FDC                     
   823                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   824   000FDC  C039  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   825   000FE0                     	if	0	;There is only one active tblptr byte
   826   000FE0                     	endif
   827   000FE0                     	if	0	;tblptru may be non-zero
   828   000FE0                     	endif
   829   000FE0                     	if	0	;tblptru may be non-zero
   830   000FE0                     	endif
   831   000FE0  0008               	tblrd		*
   832   000FE2  50F5               	movf	tablat,w,c
   833   000FE4  0A64               	xorlw	100
   834   000FE6  B4D8               	btfsc	status,2,c
   835   000FE8  EFF8  F007         	goto	u531
   836   000FEC  EFFA  F007         	goto	u530
   837   000FF0                     u531:
   838   000FF0  EF06  F008         	goto	l1127
   839   000FF4                     u530:
   840   000FF4  C039  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   841   000FF8                     	if	0	;There is only one active tblptr byte
   842   000FF8                     	endif
   843   000FF8                     	if	0	;tblptru may be non-zero
   844   000FF8                     	endif
   845   000FF8                     	if	0	;tblptru may be non-zero
   846   000FF8                     	endif
   847   000FF8  0008               	tblrd		*
   848   000FFA  50F5               	movf	tablat,w,c
   849   000FFC  0A69               	xorlw	105
   850   000FFE  A4D8               	btfss	status,2,c
   851   001000  EF04  F008         	goto	u541
   852   001004  EF06  F008         	goto	u540
   853   001008                     u541:
   854   001008  EF8E  F008         	goto	l1153
   855   00100C                     u540:
   856   00100C                     l1127:
   857                           
   858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   859   00100C  5036               	movf	vfpfcnvrt@ap^0,w,c
   860   00100E  6ED9               	movwf	fsr2l,c
   861   001010  6ADA               	clrf	fsr2h,c
   862   001012  0E02               	movlw	2
   863   001014  26DF               	addwf	indf2,f,c
   864   001016  5CDF               	subwf	indf2,w,c
   865   001018  6ED9               	movwf	fsr2l,c
   866   00101A  6ADA               	clrf	fsr2h,c
   867   00101C  CFDE F03A          	movff	postinc2,vfpfcnvrt@convarg
   868   001020  CFDE F03B          	movff	postinc2,vfpfcnvrt@convarg+1
   869   001024                     
   870                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
   871   001024  5035               	movf	vfpfcnvrt@fmt^0,w,c
   872   001026  6ED9               	movwf	fsr2l,c
   873   001028  6ADA               	clrf	fsr2h,c
   874   00102A  2839               	incf	vfpfcnvrt@cp^0,w,c
   875   00102C  6EDF               	movwf	indf2,c
   876   00102E                     
   877                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
   878   00102E  0E20               	movlw	32
   879   001030  6E3E               	movwf	vfpfcnvrt@c^0,c
   880                           
   881                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
   882   001032  BE3B               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
   883   001034  EF1E  F008         	goto	u551
   884   001038  EF21  F008         	goto	u550
   885   00103C                     u551:
   886   00103C  0E01               	movlw	1
   887   00103E  EF22  F008         	goto	u560
   888   001042                     u550:
   889   001042  0E00               	movlw	0
   890   001044                     u560:
   891   001044  6E38               	movwf	vfpfcnvrt@done^0,c
   892   001046                     l1133:
   893                           
   894                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
   895   001046  063E               	decf	vfpfcnvrt@c^0,f,c
   896   001048  503E               	movf	vfpfcnvrt@c^0,w,c
   897   00104A  0F01               	addlw	low _dbuf
   898   00104C  6ED9               	movwf	fsr2l,c
   899   00104E  6ADA               	clrf	fsr2h,c
   900   001050  C03A  F029         	movff	vfpfcnvrt@convarg,___awmod@dividend
   901   001054  C03B  F02A         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
   902   001058  0E00               	movlw	0
   903   00105A  6E2C               	movwf	(___awmod@divisor+1)^0,c
   904   00105C  0E0A               	movlw	10
   905   00105E  6E2B               	movwf	___awmod@divisor^0,c
   906   001060  ECE8  F009         	call	___awmod	;wreg free
   907   001064  C029  F02F         	movff	?___awmod,abs@a
   908   001068  C02A  F030         	movff	?___awmod+1,abs@a+1
   909   00106C  ECAF  F00A         	call	_abs	;wreg free
   910   001070  502F               	movf	?_abs^0,w,c
   911   001072  0F30               	addlw	48
   912   001074  6EDF               	movwf	indf2,c
   913   001076                     
   914                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
   915   001076  C03A  F029         	movff	vfpfcnvrt@convarg,___awdiv@dividend
   916   00107A  C03B  F02A         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
   917   00107E  0E00               	movlw	0
   918   001080  6E2C               	movwf	(___awdiv@divisor+1)^0,c
   919   001082  0E0A               	movlw	10
   920   001084  6E2B               	movwf	___awdiv@divisor^0,c
   921   001086  EC86  F009         	call	___awdiv	;wreg free
   922   00108A  C029  F03A         	movff	?___awdiv,vfpfcnvrt@convarg
   923   00108E  C02A  F03B         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
   924   001092                     
   925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
   926   001092  503A               	movf	vfpfcnvrt@convarg^0,w,c
   927   001094  103B               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
   928   001096  B4D8               	btfsc	status,2,c
   929   001098  EF50  F008         	goto	u571
   930   00109C  EF52  F008         	goto	u570
   931   0010A0                     u571:
   932   0010A0  EF5A  F008         	goto	l1141
   933   0010A4                     u570:
   934   0010A4  503E               	movf	vfpfcnvrt@c^0,w,c
   935   0010A6  A4D8               	btfss	status,2,c
   936   0010A8  EF58  F008         	goto	u581
   937   0010AC  EF5A  F008         	goto	u580
   938   0010B0                     u581:
   939   0010B0  EF23  F008         	goto	l1133
   940   0010B4                     u580:
   941   0010B4                     l1141:
   942                           
   943                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
   944   0010B4  503E               	movf	vfpfcnvrt@c^0,w,c
   945   0010B6  B4D8               	btfsc	status,2,c
   946   0010B8  EF60  F008         	goto	u591
   947   0010BC  EF62  F008         	goto	u590
   948   0010C0                     u591:
   949   0010C0  EF83  F008         	goto	l1151
   950   0010C4                     u590:
   951   0010C4  5038               	movf	vfpfcnvrt@done^0,w,c
   952   0010C6  B4D8               	btfsc	status,2,c
   953   0010C8  EF68  F008         	goto	u601
   954   0010CC  EF6A  F008         	goto	u600
   955   0010D0                     u601:
   956   0010D0  EF83  F008         	goto	l1151
   957   0010D4                     u600:
   958   0010D4                     
   959                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
   960   0010D4  063E               	decf	vfpfcnvrt@c^0,f,c
   961   0010D6  503E               	movf	vfpfcnvrt@c^0,w,c
   962   0010D8  0F01               	addlw	low _dbuf
   963   0010DA  6ED9               	movwf	fsr2l,c
   964   0010DC  6ADA               	clrf	fsr2h,c
   965   0010DE  0E2D               	movlw	45
   966   0010E0  6EDF               	movwf	indf2,c
   967   0010E2  EF83  F008         	goto	l1151
   968   0010E6                     l1147:
   969                           
   970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
   971   0010E6  503E               	movf	vfpfcnvrt@c^0,w,c
   972   0010E8  0F01               	addlw	low _dbuf
   973   0010EA  6ED9               	movwf	fsr2l,c
   974   0010EC  6ADA               	clrf	fsr2h,c
   975   0010EE  50DF               	movf	indf2,w,c
   976   0010F0  6E37               	movwf	??_vfpfcnvrt^0,c
   977   0010F2  5037               	movf	??_vfpfcnvrt^0,w,c
   978   0010F4  6E2A               	movwf	fputc@c^0,c
   979   0010F6  6A2B               	clrf	(fputc@c+1)^0,c
   980   0010F8  C033  F02C         	movff	vfpfcnvrt@fp,fputc@fp
   981   0010FC  C034  F02D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   982   001100  EC21  F009         	call	_fputc	;wreg free
   983   001104  2A3E               	incf	vfpfcnvrt@c^0,f,c
   984   001106                     l1151:
   985                           
   986                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
   987   001106  0E20               	movlw	32
   988   001108  183E               	xorwf	vfpfcnvrt@c^0,w,c
   989   00110A  A4D8               	btfss	status,2,c
   990   00110C  EF8A  F008         	goto	u611
   991   001110  EF8C  F008         	goto	u610
   992   001114                     u611:
   993   001114  EF73  F008         	goto	l1147
   994   001118                     u610:
   995   001118  EFA5  F008         	goto	l749
   996   00111C                     l1153:
   997                           
   998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
   999   00111C  5035               	movf	vfpfcnvrt@fmt^0,w,c
  1000   00111E  6ED9               	movwf	fsr2l,c
  1001   001120  6ADA               	clrf	fsr2h,c
  1002   001122  2ADF               	incf	indf2,f,c
  1003   001124  EFA5  F008         	goto	l749
  1004   001128                     l1157:
  1005                           
  1006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1007   001128  5035               	movf	vfpfcnvrt@fmt^0,w,c
  1008   00112A  6ED9               	movwf	fsr2l,c
  1009   00112C  6ADA               	clrf	fsr2h,c
  1010   00112E  CFDF FFF6          	movff	indf2,tblptrl
  1011   001132                     	if	0	;There is only one active tblptr byte
  1012   001132                     	endif
  1013   001132                     	if	0	;tblptru may be non-zero
  1014   001132                     	endif
  1015   001132                     	if	0	;tblptru may be non-zero
  1016   001132                     	endif
  1017   001132  0008               	tblrd		*
  1018   001134  50F5               	movf	tablat,w,c
  1019   001136  6E2A               	movwf	fputc@c^0,c
  1020   001138  6A2B               	clrf	(fputc@c+1)^0,c
  1021   00113A  C033  F02C         	movff	vfpfcnvrt@fp,fputc@fp
  1022   00113E  C034  F02D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1023   001142  EC21  F009         	call	_fputc	;wreg free
  1024   001146  EF8E  F008         	goto	l1153
  1025   00114A                     l749:
  1026   00114A  0012               	return		;funcret
  1027   00114C                     __end_of_vfpfcnvrt:
  1028                           	callstack 0
  1029                           
  1030 ;; *************** function _fputc *****************
  1031 ;; Defined at:
  1032 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  c               2    1[COMRAM] int 
  1035 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1036 ;;		 -> NULL(0), 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  2    1[COMRAM] int 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1050 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1051 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1052 ;;Total ram usage:        9 bytes
  1053 ;; Hardware stack levels used: 1
  1054 ;; Hardware stack levels required when called: 2
  1055 ;; This function calls:
  1056 ;;		_putch
  1057 ;; This function is called by:
  1058 ;;		_vfpfcnvrt
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text4
  1063   001242                     __ptext4:
  1064                           	callstack 0
  1065   001242                     _fputc:
  1066                           	callstack 25
  1067   001242  502C               	movf	fputc@fp^0,w,c
  1068   001244  102D               	iorwf	(fputc@fp+1)^0,w,c
  1069   001246  B4D8               	btfsc	status,2,c
  1070   001248  EF28  F009         	goto	u461
  1071   00124C  EF2A  F009         	goto	u460
  1072   001250                     u461:
  1073   001250  EF33  F009         	goto	l1089
  1074   001254                     u460:
  1075   001254  502C               	movf	fputc@fp^0,w,c
  1076   001256  102D               	iorwf	(fputc@fp+1)^0,w,c
  1077   001258  A4D8               	btfss	status,2,c
  1078   00125A  EF31  F009         	goto	u471
  1079   00125E  EF33  F009         	goto	u470
  1080   001262                     u471:
  1081   001262  EF38  F009         	goto	l1091
  1082   001266                     u470:
  1083   001266                     l1089:
  1084   001266  502A               	movf	fputc@c^0,w,c
  1085   001268  ECC9  F00A         	call	_putch
  1086   00126C  EF85  F009         	goto	l785
  1087   001270                     l1091:
  1088   001270  EE20 F00A          	lfsr	2,10
  1089   001274  502C               	movf	fputc@fp^0,w,c
  1090   001276  26D9               	addwf	fsr2l,f,c
  1091   001278  502D               	movf	(fputc@fp+1)^0,w,c
  1092   00127A  22DA               	addwfc	fsr2h,f,c
  1093   00127C  50DE               	movf	postinc2,w,c
  1094   00127E  10DE               	iorwf	postinc2,w,c
  1095   001280  B4D8               	btfsc	status,2,c
  1096   001282  EF45  F009         	goto	u481
  1097   001286  EF47  F009         	goto	u480
  1098   00128A                     u481:
  1099   00128A  EF62  F009         	goto	l1095
  1100   00128E                     u480:
  1101   00128E  EE20 F00A          	lfsr	2,10
  1102   001292  502C               	movf	fputc@fp^0,w,c
  1103   001294  26D9               	addwf	fsr2l,f,c
  1104   001296  502D               	movf	(fputc@fp+1)^0,w,c
  1105   001298  22DA               	addwfc	fsr2h,f,c
  1106   00129A  EE10 F003          	lfsr	1,3
  1107   00129E  502C               	movf	fputc@fp^0,w,c
  1108   0012A0  26E1               	addwf	fsr1l,f,c
  1109   0012A2  502D               	movf	(fputc@fp+1)^0,w,c
  1110   0012A4  22E2               	addwfc	fsr1h,f,c
  1111   0012A6  50DE               	movf	postinc2,w,c
  1112   0012A8  5CE6               	subwf	postinc1,w,c
  1113   0012AA  50E6               	movf	postinc1,w,c
  1114   0012AC  0A80               	xorlw	128
  1115   0012AE  6E32               	movwf	(??_fputc+4)^0,c
  1116   0012B0  50DE               	movf	postinc2,w,c
  1117   0012B2  0A80               	xorlw	128
  1118   0012B4  5832               	subwfb	(??_fputc+4)^0,w,c
  1119   0012B6  B0D8               	btfsc	status,0,c
  1120   0012B8  EF60  F009         	goto	u491
  1121   0012BC  EF62  F009         	goto	u490
  1122   0012C0                     u491:
  1123   0012C0  EF85  F009         	goto	l785
  1124   0012C4                     u490:
  1125   0012C4                     l1095:
  1126   0012C4  EE20 F003          	lfsr	2,3
  1127   0012C8  502C               	movf	fputc@fp^0,w,c
  1128   0012CA  26D9               	addwf	fsr2l,f,c
  1129   0012CC  502D               	movf	(fputc@fp+1)^0,w,c
  1130   0012CE  22DA               	addwfc	fsr2h,f,c
  1131   0012D0  CFDE F02E          	movff	postinc2,??_fputc
  1132   0012D4  CFDD F02F          	movff	postdec2,??_fputc+1
  1133   0012D8  C02C  FFD9         	movff	fputc@fp,fsr2l
  1134   0012DC  C02D  FFDA         	movff	fputc@fp+1,fsr2h
  1135   0012E0  CFDE F030          	movff	postinc2,??_fputc+2
  1136   0012E4  CFDD F031          	movff	postdec2,??_fputc+3
  1137   0012E8  502E               	movf	??_fputc^0,w,c
  1138   0012EA  2430               	addwf	(??_fputc+2)^0,w,c
  1139   0012EC  6ED9               	movwf	fsr2l,c
  1140   0012EE  502F               	movf	(??_fputc+1)^0,w,c
  1141   0012F0  2031               	addwfc	(??_fputc+3)^0,w,c
  1142   0012F2  6EDA               	movwf	fsr2h,c
  1143   0012F4  C02A  FFDF         	movff	fputc@c,indf2
  1144   0012F8  EE20 F003          	lfsr	2,3
  1145   0012FC  502C               	movf	fputc@fp^0,w,c
  1146   0012FE  26D9               	addwf	fsr2l,f,c
  1147   001300  502D               	movf	(fputc@fp+1)^0,w,c
  1148   001302  22DA               	addwfc	fsr2h,f,c
  1149   001304  2ADE               	incf	postinc2,f,c
  1150   001306  0E00               	movlw	0
  1151   001308  22DD               	addwfc	postdec2,f,c
  1152   00130A                     l785:
  1153   00130A  0012               	return		;funcret
  1154   00130C                     __end_of_fputc:
  1155                           	callstack 0
  1156                           
  1157 ;; *************** function _putch *****************
  1158 ;; Defined at:
  1159 ;;		line 100 in file "main2.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  byte            1    wreg     unsigned char 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  byte            1    0[COMRAM] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1177 ;;Total ram usage:        1 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_fputc
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text5
  1188   001592                     __ptext5:
  1189                           	callstack 0
  1190   001592                     _putch:
  1191                           	callstack 25
  1192                           
  1193                           ;incstack = 0
  1194                           ;putch@byte stored from wreg
  1195   001592  6E29               	movwf	putch@byte^0,c
  1196   001594                     l31:
  1197                           
  1198                           ;main2.c: 102:     while (PIR3bits.TX1IF == 0) {
  1199   001594  010E               	movlb	14	; () banked
  1200   001596  A9C8               	btfss	200,4,b	;volatile
  1201   001598  EFD0  F00A         	goto	u11
  1202   00159C  EFD2  F00A         	goto	u10
  1203   0015A0                     u11:
  1204   0015A0  EFCA  F00A         	goto	l31
  1205   0015A4                     u10:
  1206   0015A4                     
  1207                           ; BSR set to: 14
  1208                           ;main2.c: 105:     TX1REG = byte;
  1209   0015A4  C029  FF99         	movff	putch@byte,3993	;volatile
  1210   0015A8                     l34:
  1211                           
  1212                           ; BSR set to: 14
  1213                           ;main2.c: 108:     while (PIR3bits.TX1IF==0) {
  1214   0015A8  A9C8               	btfss	200,4,b	;volatile
  1215   0015AA  EFD9  F00A         	goto	u21
  1216   0015AE  EFDB  F00A         	goto	u20
  1217   0015B2                     u21:
  1218   0015B2  EFD4  F00A         	goto	l34
  1219   0015B6                     u20:
  1220   0015B6                     
  1221                           ; BSR set to: 14
  1222   0015B6  0012               	return		;funcret
  1223   0015B8                     __end_of_putch:
  1224                           	callstack 0
  1225                           
  1226 ;; *************** function _abs *****************
  1227 ;; Defined at:
  1228 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  a               2    6[COMRAM] int 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  2    6[COMRAM] int 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1245 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1246 ;;Total ram usage:        4 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; Hardware stack levels required when called: 1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_vfpfcnvrt
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text6
  1257   00155E                     __ptext6:
  1258                           	callstack 0
  1259   00155E                     _abs:
  1260                           	callstack 26
  1261   00155E  BE30               	btfsc	(abs@a+1)^0,7,c
  1262   001560  EFB4  F00A         	goto	u501
  1263   001564  EFB6  F00A         	goto	u500
  1264   001568                     u501:
  1265   001568  EFBC  F00A         	goto	l770
  1266   00156C                     u500:
  1267   00156C  C02F  F02F         	movff	abs@a,?_abs
  1268   001570  C030  F030         	movff	abs@a+1,?_abs+1
  1269   001574  EFC8  F00A         	goto	l773
  1270   001578                     l770:
  1271   001578  C02F  F031         	movff	abs@a,??_abs
  1272   00157C  C030  F032         	movff	abs@a+1,??_abs+1
  1273   001580  1E31               	comf	??_abs^0,f,c
  1274   001582  1E32               	comf	(??_abs+1)^0,f,c
  1275   001584  4A31               	infsnz	??_abs^0,f,c
  1276   001586  2A32               	incf	(??_abs+1)^0,f,c
  1277   001588  C031  F02F         	movff	??_abs,?_abs
  1278   00158C  C032  F030         	movff	??_abs+1,?_abs+1
  1279   001590                     l773:
  1280   001590  0012               	return		;funcret
  1281   001592                     __end_of_abs:
  1282                           	callstack 0
  1283                           
  1284 ;; *************** function ___awmod *****************
  1285 ;; Defined at:
  1286 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  dividend        2    0[COMRAM] int 
  1289 ;;  divisor         2    2[COMRAM] int 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  sign            1    5[COMRAM] unsigned char 
  1292 ;;  counter         1    4[COMRAM] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  2    0[COMRAM] int 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;Total ram usage:        6 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_vfpfcnvrt
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text7
  1317   0013D0                     __ptext7:
  1318                           	callstack 0
  1319   0013D0                     ___awmod:
  1320                           	callstack 26
  1321   0013D0  0E00               	movlw	0
  1322   0013D2  6E2E               	movwf	___awmod@sign^0,c
  1323   0013D4  BE2A               	btfsc	(___awmod@dividend+1)^0,7,c
  1324   0013D6  EFF1  F009         	goto	u400
  1325   0013DA  EFEF  F009         	goto	u401
  1326   0013DE                     u401:
  1327   0013DE  EFF7  F009         	goto	l1057
  1328   0013E2                     u400:
  1329   0013E2  6C29               	negf	___awmod@dividend^0,c
  1330   0013E4  1E2A               	comf	(___awmod@dividend+1)^0,f,c
  1331   0013E6  B0D8               	btfsc	status,0,c
  1332   0013E8  2A2A               	incf	(___awmod@dividend+1)^0,f,c
  1333   0013EA  0E01               	movlw	1
  1334   0013EC  6E2E               	movwf	___awmod@sign^0,c
  1335   0013EE                     l1057:
  1336   0013EE  BE2C               	btfsc	(___awmod@divisor+1)^0,7,c
  1337   0013F0  EFFE  F009         	goto	u410
  1338   0013F4  EFFC  F009         	goto	u411
  1339   0013F8                     u411:
  1340   0013F8  EF02  F00A         	goto	l1061
  1341   0013FC                     u410:
  1342   0013FC  6C2B               	negf	___awmod@divisor^0,c
  1343   0013FE  1E2C               	comf	(___awmod@divisor+1)^0,f,c
  1344   001400  B0D8               	btfsc	status,0,c
  1345   001402  2A2C               	incf	(___awmod@divisor+1)^0,f,c
  1346   001404                     l1061:
  1347   001404  502B               	movf	___awmod@divisor^0,w,c
  1348   001406  102C               	iorwf	(___awmod@divisor+1)^0,w,c
  1349   001408  B4D8               	btfsc	status,2,c
  1350   00140A  EF09  F00A         	goto	u421
  1351   00140E  EF0B  F00A         	goto	u420
  1352   001412                     u421:
  1353   001412  EF2F  F00A         	goto	l1077
  1354   001416                     u420:
  1355   001416  0E01               	movlw	1
  1356   001418  6E2D               	movwf	___awmod@counter^0,c
  1357   00141A  EF13  F00A         	goto	l1067
  1358   00141E                     l1065:
  1359   00141E  90D8               	bcf	status,0,c
  1360   001420  362B               	rlcf	___awmod@divisor^0,f,c
  1361   001422  362C               	rlcf	(___awmod@divisor+1)^0,f,c
  1362   001424  2A2D               	incf	___awmod@counter^0,f,c
  1363   001426                     l1067:
  1364   001426  AE2C               	btfss	(___awmod@divisor+1)^0,7,c
  1365   001428  EF18  F00A         	goto	u431
  1366   00142C  EF1A  F00A         	goto	u430
  1367   001430                     u431:
  1368   001430  EF0F  F00A         	goto	l1065
  1369   001434                     u430:
  1370   001434                     l1069:
  1371   001434  502B               	movf	___awmod@divisor^0,w,c
  1372   001436  5C29               	subwf	___awmod@dividend^0,w,c
  1373   001438  502C               	movf	(___awmod@divisor+1)^0,w,c
  1374   00143A  582A               	subwfb	(___awmod@dividend+1)^0,w,c
  1375   00143C  A0D8               	btfss	status,0,c
  1376   00143E  EF23  F00A         	goto	u441
  1377   001442  EF25  F00A         	goto	u440
  1378   001446                     u441:
  1379   001446  EF29  F00A         	goto	l1073
  1380   00144A                     u440:
  1381   00144A  502B               	movf	___awmod@divisor^0,w,c
  1382   00144C  5E29               	subwf	___awmod@dividend^0,f,c
  1383   00144E  502C               	movf	(___awmod@divisor+1)^0,w,c
  1384   001450  5A2A               	subwfb	(___awmod@dividend+1)^0,f,c
  1385   001452                     l1073:
  1386   001452  90D8               	bcf	status,0,c
  1387   001454  322C               	rrcf	(___awmod@divisor+1)^0,f,c
  1388   001456  322B               	rrcf	___awmod@divisor^0,f,c
  1389   001458  2E2D               	decfsz	___awmod@counter^0,f,c
  1390   00145A  EF1A  F00A         	goto	l1069
  1391   00145E                     l1077:
  1392   00145E  502E               	movf	___awmod@sign^0,w,c
  1393   001460  B4D8               	btfsc	status,2,c
  1394   001462  EF35  F00A         	goto	u451
  1395   001466  EF37  F00A         	goto	u450
  1396   00146A                     u451:
  1397   00146A  EF3B  F00A         	goto	l1081
  1398   00146E                     u450:
  1399   00146E  6C29               	negf	___awmod@dividend^0,c
  1400   001470  1E2A               	comf	(___awmod@dividend+1)^0,f,c
  1401   001472  B0D8               	btfsc	status,0,c
  1402   001474  2A2A               	incf	(___awmod@dividend+1)^0,f,c
  1403   001476                     l1081:
  1404   001476  C029  F029         	movff	___awmod@dividend,?___awmod
  1405   00147A  C02A  F02A         	movff	___awmod@dividend+1,?___awmod+1
  1406   00147E  0012               	return		;funcret
  1407   001480                     __end_of___awmod:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function ___awdiv *****************
  1411 ;; Defined at:
  1412 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  dividend        2    0[COMRAM] int 
  1415 ;;  divisor         2    2[COMRAM] int 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  quotient        2    6[COMRAM] int 
  1418 ;;  sign            1    5[COMRAM] unsigned char 
  1419 ;;  counter         1    4[COMRAM] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  2    0[COMRAM] int 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1430 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1432 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1433 ;;Total ram usage:        8 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 1
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_vfpfcnvrt
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text8
  1444   00130C                     __ptext8:
  1445                           	callstack 0
  1446   00130C                     ___awdiv:
  1447                           	callstack 26
  1448   00130C  0E00               	movlw	0
  1449   00130E  6E2E               	movwf	___awdiv@sign^0,c
  1450   001310  BE2C               	btfsc	(___awdiv@divisor+1)^0,7,c
  1451   001312  EF8F  F009         	goto	u340
  1452   001316  EF8D  F009         	goto	u341
  1453   00131A                     u341:
  1454   00131A  EF95  F009         	goto	l1013
  1455   00131E                     u340:
  1456   00131E  6C2B               	negf	___awdiv@divisor^0,c
  1457   001320  1E2C               	comf	(___awdiv@divisor+1)^0,f,c
  1458   001322  B0D8               	btfsc	status,0,c
  1459   001324  2A2C               	incf	(___awdiv@divisor+1)^0,f,c
  1460   001326  0E01               	movlw	1
  1461   001328  6E2E               	movwf	___awdiv@sign^0,c
  1462   00132A                     l1013:
  1463   00132A  BE2A               	btfsc	(___awdiv@dividend+1)^0,7,c
  1464   00132C  EF9C  F009         	goto	u350
  1465   001330  EF9A  F009         	goto	u351
  1466   001334                     u351:
  1467   001334  EFA2  F009         	goto	l1019
  1468   001338                     u350:
  1469   001338  6C29               	negf	___awdiv@dividend^0,c
  1470   00133A  1E2A               	comf	(___awdiv@dividend+1)^0,f,c
  1471   00133C  B0D8               	btfsc	status,0,c
  1472   00133E  2A2A               	incf	(___awdiv@dividend+1)^0,f,c
  1473   001340  0E01               	movlw	1
  1474   001342  1A2E               	xorwf	___awdiv@sign^0,f,c
  1475   001344                     l1019:
  1476   001344  0E00               	movlw	0
  1477   001346  6E30               	movwf	(___awdiv@quotient+1)^0,c
  1478   001348  0E00               	movlw	0
  1479   00134A  6E2F               	movwf	___awdiv@quotient^0,c
  1480   00134C  502B               	movf	___awdiv@divisor^0,w,c
  1481   00134E  102C               	iorwf	(___awdiv@divisor+1)^0,w,c
  1482   001350  B4D8               	btfsc	status,2,c
  1483   001352  EFAD  F009         	goto	u361
  1484   001356  EFAF  F009         	goto	u360
  1485   00135A                     u361:
  1486   00135A  EFD7  F009         	goto	l1041
  1487   00135E                     u360:
  1488   00135E  0E01               	movlw	1
  1489   001360  6E2D               	movwf	___awdiv@counter^0,c
  1490   001362  EFB7  F009         	goto	l1027
  1491   001366                     l1025:
  1492   001366  90D8               	bcf	status,0,c
  1493   001368  362B               	rlcf	___awdiv@divisor^0,f,c
  1494   00136A  362C               	rlcf	(___awdiv@divisor+1)^0,f,c
  1495   00136C  2A2D               	incf	___awdiv@counter^0,f,c
  1496   00136E                     l1027:
  1497   00136E  AE2C               	btfss	(___awdiv@divisor+1)^0,7,c
  1498   001370  EFBC  F009         	goto	u371
  1499   001374  EFBE  F009         	goto	u370
  1500   001378                     u371:
  1501   001378  EFB3  F009         	goto	l1025
  1502   00137C                     u370:
  1503   00137C                     l1029:
  1504   00137C  90D8               	bcf	status,0,c
  1505   00137E  362F               	rlcf	___awdiv@quotient^0,f,c
  1506   001380  3630               	rlcf	(___awdiv@quotient+1)^0,f,c
  1507   001382  502B               	movf	___awdiv@divisor^0,w,c
  1508   001384  5C29               	subwf	___awdiv@dividend^0,w,c
  1509   001386  502C               	movf	(___awdiv@divisor+1)^0,w,c
  1510   001388  582A               	subwfb	(___awdiv@dividend+1)^0,w,c
  1511   00138A  A0D8               	btfss	status,0,c
  1512   00138C  EFCA  F009         	goto	u381
  1513   001390  EFCC  F009         	goto	u380
  1514   001394                     u381:
  1515   001394  EFD1  F009         	goto	l1037
  1516   001398                     u380:
  1517   001398  502B               	movf	___awdiv@divisor^0,w,c
  1518   00139A  5E29               	subwf	___awdiv@dividend^0,f,c
  1519   00139C  502C               	movf	(___awdiv@divisor+1)^0,w,c
  1520   00139E  5A2A               	subwfb	(___awdiv@dividend+1)^0,f,c
  1521   0013A0  802F               	bsf	___awdiv@quotient^0,0,c
  1522   0013A2                     l1037:
  1523   0013A2  90D8               	bcf	status,0,c
  1524   0013A4  322C               	rrcf	(___awdiv@divisor+1)^0,f,c
  1525   0013A6  322B               	rrcf	___awdiv@divisor^0,f,c
  1526   0013A8  2E2D               	decfsz	___awdiv@counter^0,f,c
  1527   0013AA  EFBE  F009         	goto	l1029
  1528   0013AE                     l1041:
  1529   0013AE  502E               	movf	___awdiv@sign^0,w,c
  1530   0013B0  B4D8               	btfsc	status,2,c
  1531   0013B2  EFDD  F009         	goto	u391
  1532   0013B6  EFDF  F009         	goto	u390
  1533   0013BA                     u391:
  1534   0013BA  EFE3  F009         	goto	l1045
  1535   0013BE                     u390:
  1536   0013BE  6C2F               	negf	___awdiv@quotient^0,c
  1537   0013C0  1E30               	comf	(___awdiv@quotient+1)^0,f,c
  1538   0013C2  B0D8               	btfsc	status,0,c
  1539   0013C4  2A30               	incf	(___awdiv@quotient+1)^0,f,c
  1540   0013C6                     l1045:
  1541   0013C6  C02F  F029         	movff	___awdiv@quotient,?___awdiv
  1542   0013CA  C030  F02A         	movff	___awdiv@quotient+1,?___awdiv+1
  1543   0013CE  0012               	return		;funcret
  1544   0013D0                     __end_of___awdiv:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _getch *****************
  1548 ;; Defined at:
  1549 ;;		line 115 in file "main2.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  2   39[None  ] int 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		Interrupt level 1
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text9
  1577   0015FC                     __ptext9:
  1578                           	callstack 0
  1579   0015FC                     _getch:
  1580                           	callstack 25
  1581   0015FC                     
  1582                           ;main2.c: 117:     get_char = RC1REG;
  1583   0015FC  CF98 F028          	movff	3992,_get_char	;volatile
  1584   001600                     
  1585                           ;main2.c: 119:     return 0;
  1586   001600  0E00               	movlw	0
  1587   001602  6E2A               	movwf	(?_getch+1)^0,c
  1588   001604  0E00               	movlw	0
  1589   001606  6E29               	movwf	?_getch^0,c
  1590   001608  0012               	return		;funcret
  1591   00160A                     __end_of_getch:
  1592                           	callstack 0
  1593                           
  1594                           	psect	rparam
  1595   000000                     tosu	equ	0xFFF
  1596                           tosh	equ	0xFFE
  1597                           tosl	equ	0xFFD
  1598                           stkptr	equ	0xFFC
  1599                           pclatu	equ	0xFFB
  1600                           pclath	equ	0xFFA
  1601                           pcl	equ	0xFF9
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           prodh	equ	0xFF4
  1607                           prodl	equ	0xFF3
  1608                           indf0	equ	0xFEF
  1609                           postinc0	equ	0xFEE
  1610                           postdec0	equ	0xFED
  1611                           preinc0	equ	0xFEC
  1612                           plusw0	equ	0xFEB
  1613                           fsr0h	equ	0xFEA
  1614                           fsr0l	equ	0xFE9
  1615                           wreg	equ	0xFE8
  1616                           indf1	equ	0xFE7
  1617                           postinc1	equ	0xFE6
  1618                           postdec1	equ	0xFE5
  1619                           preinc1	equ	0xFE4
  1620                           plusw1	equ	0xFE3
  1621                           fsr1h	equ	0xFE2
  1622                           fsr1l	equ	0xFE1
  1623                           bsr	equ	0xFE0
  1624                           indf2	equ	0xFDF
  1625                           postinc2	equ	0xFDE
  1626                           postdec2	equ	0xFDD
  1627                           preinc2	equ	0xFDC
  1628                           plusw2	equ	0xFDB
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      77
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[19]), STR_10(CODE[14]), STR_11(CODE[3]), STR_12(CODE[2]), 
		 -> STR_2(CODE[3]), STR_3(CODE[2]), STR_4(CODE[22]), STR_5(CODE[3]), 
		 -> STR_6(CODE[2]), STR_7(CODE[11]), STR_8(CODE[3]), STR_9(CODE[2]), 

    S550$buffer	PTR unsigned char  size(2) Largest target is 0

    S550$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[19]), STR_10(CODE[14]), STR_11(CODE[3]), STR_12(CODE[2]), 
		 -> STR_2(CODE[3]), STR_3(CODE[2]), STR_4(CODE[22]), STR_5(CODE[3]), 
		 -> STR_6(CODE[2]), STR_7(CODE[11]), STR_8(CODE[3]), STR_9(CODE[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[19]), STR_10(CODE[14]), STR_11(CODE[3]), STR_12(CODE[2]), 
		 -> STR_2(CODE[3]), STR_3(CODE[2]), STR_4(CODE[22]), STR_5(CODE[3]), 
		 -> STR_6(CODE[2]), STR_7(CODE[11]), STR_8(CODE[3]), STR_9(CODE[2]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[19]), STR_10(CODE[14]), STR_11(CODE[3]), STR_12(CODE[2]), 
		 -> STR_2(CODE[3]), STR_3(CODE[2]), STR_4(CODE[22]), STR_5(CODE[3]), 
		 -> STR_6(CODE[2]), STR_7(CODE[11]), STR_8(CODE[3]), STR_9(CODE[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _abs->___awmod

Critical Paths under _getch in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _getch in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _getch in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _getch in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _getch in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _getch in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _getch in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _getch in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _getch in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _getch in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _getch in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _getch in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _getch in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _getch in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _getch in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    4255
                                             31 COMRAM     6     6      0
                             _config
    _pass_variable_between_C_and_ASM
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     3      3    4185
                                             27 COMRAM     4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    3217
                                             22 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     8      4    2864
                                             10 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     949
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _pass_variable_between_C_and_ASM                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _pass_variable_between_C_and_ASM
   _printf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 _getch (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFR          100      0       0      37        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR_1hl       CF      0       0      34        0.0%
BITBIGSFR_1l        A9      0       0      35        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFR_1hh       66      0       0      33        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      4D       1       81.1%
BITBANK14           1F      0       0      31        0.0%
BANK14              1F      0       0      32        0.0%
BIGRAM_1            1F      0       0      36        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      12        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 29 20:13:30 2023

                               l31 1594                                 l40 1608  
                               l34 15A8                                 l37 15B6  
                               u10 15A4                                 u11 15A0  
                               u20 15B6                                 u21 15B2  
                     ___awdiv@sign 002E                                l274 13CE  
                              l287 147E                                l721 15EA  
                              l770 1578                                l773 1590  
                              l749 114A                                l766 155C  
                              l785 130A                                l795 1594  
                              l797 15A4                                l999 15FC  
                              u400 13E2                                u401 13DE  
                              u410 13FC                                u411 13F8  
                              u340 131E                                u420 1416  
                              u500 156C                                u341 131A  
                              u421 1412                                u501 1568  
                              u350 1338                                u430 1434  
                              u510 0F6A                                u351 1334  
                              u431 1430                                u511 0F66  
                              u360 135E                                u440 144A  
                              u600 10D4                                u520 0FA0  
                              u361 135A                                u441 1446  
                              u601 10D0                                u521 0F9C  
                              u370 137C                                u450 146E  
                              u610 1118                                u530 0FF4  
                              u371 1378                                u451 146A  
                              u611 1114                                u531 0FF0  
                              u380 1398                                u460 1254  
                              u540 100C                                u620 1554  
                              u381 1394                                u461 1250  
                              u541 1008                                u621 1550  
                              u390 13BE                                u470 1266  
                              u550 1042                                u630 1192  
                              u391 13BA                                u471 1262  
                              u551 103C                                u631 118E  
                              u480 128E                                u560 1044  
                              u640 11F6                                u481 128A  
                              u641 11F2                                u490 12C4  
                              u570 10A4                                u491 12C0  
                              u571 10A0                                u580 10B4  
                              u581 10B0                                u590 10C4  
                              u591 10C0                                u657 1170  
                              _abs 155E                       ___awmod@sign 002E  
                              wreg 0FE8                               l1001 1600  
                             l1011 1326                               l1021 134C  
                             l1013 132A                               l1005 130C  
                             l1101 156C                               l1031 1382  
                             l1023 135E                               l1015 1338  
                             l1007 1310                               l1111 0F82  
                             l1103 0F4C                               l1033 1398  
                             l1025 1366                               l1041 13AE  
                             l1017 1340                               l1009 131E  
                             l1113 0FA0                               l1121 0FD2  
                             l1105 0F6A                               l1201 122E  
                             l1043 13BE                               l1035 13A0  
                             l1027 136E                               l1019 1344  
                             l1051 13D4                               l1131 102E  
                             l1123 0FDC                               l1115 0FA8  
                             l1107 0F72                               l1203 1236  
                             ?_abs 002F                               l1045 13C6  
                             l1037 13A2                               l1029 137C  
                             l1061 1404                               l1053 13E2  
                             l1141 10B4                               l1133 1046  
                             l1125 0FF4                               l1117 0FBC  
                             l1109 0F7E                               l1039 13A8  
                             l1071 144A                               l1063 1416  
                             l1055 13EA                               l1143 10C4  
                             l1151 1106                               l1135 1076  
                             l1127 100C                               l1081 1476  
                             l1073 1452                               l1065 141E  
                             l1057 13EE                               l1049 13D0  
                             l1145 10D4                               l1137 1092  
                             l1129 1024                               l1153 111C  
                             l1075 1458                               l1067 1426  
                             l1059 13FC                               l1091 1270  
                             l1147 10E6                               l1139 10A4  
                             l1163 1520                               l1069 1434  
                             l1077 145E                               l1093 128E  
                             l1085 1242                               l1149 1104  
                             l1157 1128                               l1165 1528  
                             l1173 15D2                               l1181 115E  
                             l1079 146E                               l1095 12C4  
                             l1087 1254                               l1167 153C  
                             l1175 15D6                               l1191 11DA  
                             l1183 1166                               l1089 1266  
                             l1169 1554                               l1193 11E6  
                             l1185 117E                               l1099 155E  
                             l1195 11F6                               l1187 1192  
                             l1179 114C                               l1197 121C  
                             l1189 11D2                               l1199 1220  
                             STR_1 0F17                               STR_2 0F46  
                             STR_3 0F49                               STR_4 0F01  
                             STR_5 0F46                               STR_6 0F49  
                             STR_7 0F38                               STR_8 0F43  
                             STR_9 0F49                               abs@a 002F  
                             _dbuf 0001                               _main 114C  
                             _prec 0023                               fsr1h 0FE2  
                             fsr2h 0FDA                               indf2 0FDF  
                             fsr1l 0FE1                               fsr2l 0FD9  
                             start 0046                       ___param_bank 0000  
                            ??_abs 0031                              ?_main 0029  
                  __end_of___awdiv 13D0                              STR_10 0F2A  
                            STR_11 0F43                              STR_12 0F49  
                  __end_of___awmod 1480                    ___awdiv@divisor 002B  
                  ___awdiv@counter 002D                       vfpfcnvrt@fmt 0035  
                            _flags 0027                              _getch 15FC  
                            _fputc 1242                              _width 0021  
                            _putch 1592                              main@j 004A  
                            tablat 0FF5                              status 0FD8  
                  __initialization 15B8                       __end_of_main 1242  
                           ??_main 0048                      __activetblptr 0001  
                           ?_getch 0029                             ?_fputc 002A  
                 ___awdiv@dividend 0029                             ?_putch 0029  
                           _RC1REG 0F98                      vfpfcnvrt@done 0038  
                           _TX1REG 0F99                       vfprintf@cfmt 0043  
                        ??___awdiv 002D                          ??___awmod 002D  
                           _config 1480                             clear_0 15BE  
                 ___awdiv@quotient 002F                    ___awmod@divisor 002B  
                           isa$std 0001                    ___awmod@counter 002D  
                           _printf 15D2                             fputc@c 002A  
                     __mediumconst 0000                             tblptrh 0FF7  
                           tblptrl 0FF6                             tblptru 0FF8  
                 __end_of_vfprintf 155E                         __accesstop 0060  
          __end_of__initialization 15C4                      ___rparam_used 0001  
                   __pcstackCOMRAM 0029                      __end_of_getch 160A  
                    __end_of_fputc 130C                      __end_of_putch 15B8  
                          ??_getch 0029                            ??_fputc 002E  
                          ??_putch 0029                            ?_config 0029  
                          ?_printf 0044                            __Hparam 0000  
                          __Lparam 0000                            ___awdiv 130C  
                          ___awmod 13D0                          ?_vfprintf 003F  
                     __psmallconst 0F00                            __pcinit 15B8  
                          __ramtop 0F00                            __ptext0 114C  
                          __ptext1 15D2                            __ptext2 1520  
                          __ptext3 0F4C                            __ptext4 1242  
                          __ptext5 1592                            __ptext6 155E  
                          __ptext7 13D0                            __ptext8 130C  
                          __ptext9 15FC                   ___awmod@dividend 0029  
             end_of_initialization 15C4                            fputc@fp 002C  
??_pass_variable_between_C_and_ASM 0029   ?_pass_variable_between_C_and_ASM 0029  
  _pass_variable_between_C_and_ASM 15EC                  __end_of_vfpfcnvrt 114C  
                       _var_global 0025                            postdec2 0FDD  
                          postinc0 0FEE                            postinc1 0FE6  
                          postinc2 0FDE                   vfpfcnvrt@convarg 003A  
                       ??_vfprintf 0043                         main@result 004C  
                      vfpfcnvrt@ap 0036                        vfpfcnvrt@cp 0039  
                      vfpfcnvrt@fp 0033                     __end_of_printf 15EC  
              start_initialization 15B8                        __end_of_abs 1592  
                      vfprintf@fmt 0041                           ??_config 0029  
                         ??_printf 0047                        __pbssCOMRAM 0001  
                         ?___awdiv 0029                           ?___awmod 0029  
                      __smallconst 0F00                           _PIR3bits 0EC8  
                        _vfpfcnvrt 0F4C                         vfpfcnvrt@c 003E  
                         __Hrparam 0000                         vfprintf@ap 0042  
                         __Lrparam 0000                         vfprintf@fp 003F  
                     __Lsmallconst 0F00                         ?_vfpfcnvrt 0033  
                         _get_char 0028                           isa$xinst 0000  
                         _vfprintf 1520                          printf@fmt 0044  
                        putch@byte 0029                           intlevel1 0000  
                         printf@ap 0047                        ??_vfpfcnvrt 0037  
