

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                                           Thu Jan 04 18:08:38 2024


     1                           	processor	18F47Q10
     2                           	pagewidth 132
     3                           	opt	flic
     4                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	udata_bank6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    12                           	psect	udata_bank7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    13                           	psect	udata_bank8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    14                           	psect	udata_bank9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    15                           	psect	udata_bank10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    16                           	psect	udata_bank11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    17                           	psect	udata_bank12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    18                           	psect	udata_bank14,global,class=BANK14,space=1,delta=1,lowdata,noexec
    19                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    20                           	psect	code,global,reloc=2,class=CODE,delta=1
    21                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    22                           	psect	edata,global,class=EEDATA,space=3,delta=1,noexec
    23                           	psect	intcode,global,delta=1
    24   000000                     
    25                           	psect	edata
    26   000000                     stk_offset	set	0
    27   000000                     auto_size	set	0
    28                           
    29                           ; stack_auto defines a symbol /name/_offset which equates to the
    30                           ; stack offset of the auto object in question
    31   000000                     
    32                           ; stack_param defines a symbol /name/_offset which equates to the
    33                           ; stack offset of the parameter object in question
    34   000000                     
    35                           ; alloc_stack adjusts the SP to allocate space for auto objects
    36                           ; it also links in to the btemp symbol so that can be used
    37   000000                     
    38                           ; restore_stack adjusts the SP to remove all auto and parameter
    39                           ; objects from the stack prior to returning from a function
    40   000000                     
    41                           	psect	intcode
    42   000008                     _int_handler:
    43                           	callstack 0
    44   000008  010E               	banksel	3781
    45   00000A  BBC5               	btfsc	3781,5,b	;tava a 0 antes
    46   00000C  D008               	goto	_timer0_int_handler
    47   00000E  010E               	banksel	3782
    48   000010  B1C6               	btfsc	3782,0,b
    49   000012  D00A               	goto	_adc_int_handler
    50   000014  010E               	banksel	3784
    51   000016  BBC8               	btfsc	3784,5,b	;check if the EUSART1 RX flag is set. If so, go to the C function _getch. If not, sk
      +                          ip.
    52   000018  EC81  F007         	call	_identify_NCAP_cmd
    53   00001C  0010               	retfie	
    54   00001E                     _timer0_int_handler:
    55   00001E  010F               	banksel	3931
    56   000020  815B               	bsf	3931,0,b
    57   000022  010E               	banksel	3781
    58   000024  9BC5               	bcf	3781,5,b
    59   000026  0010               	retfie	
    60   000028                     _adc_int_handler:
    61                           
    62                           ; BANKSEL ADRESH ; registro do resultado, quando faz a conversão vai para
    63                           ;AQUI ; H--> HIGHEST
    64                           ; MOVFF ADRESH, 0
    65                           ;
    66                           ; BANKSEL ADRESL
    67                           ;
    68                           ; MOVFF ADRESL, 0
    69                           ;
    70                           ;
    71                           ; BANKSEL TX1REG
    72                           ;
    73                           ; MOVFF 0, TX1REG
    74   000028  010E               	banksel	3782
    75   00002A  91C6               	bcf	3782,0,b
    76   00002C  0010               	retfie	
    77                           tosu	equ	0xFFF
    78                           tosh	equ	0xFFE
    79                           tosl	equ	0xFFD
    80                           stkptr	equ	0xFFC
    81                           pclatu	equ	0xFFB
    82                           pclath	equ	0xFFA
    83                           pcl	equ	0xFF9
    84                           tblptru	equ	0xFF8
    85                           tblptrh	equ	0xFF7
    86                           tblptrl	equ	0xFF6
    87                           tablat	equ	0xFF5
    88                           prodh	equ	0xFF4
    89                           prodl	equ	0xFF3
    90                           indf0	equ	0xFEF
    91                           postinc0	equ	0xFEE
    92                           postdec0	equ	0xFED
    93                           preinc0	equ	0xFEC
    94                           plusw0	equ	0xFEB
    95                           fsr0h	equ	0xFEA
    96                           fsr0l	equ	0xFE9
    97                           wreg	equ	0xFE8
    98                           indf1	equ	0xFE7
    99                           postinc1	equ	0xFE6
   100                           postdec1	equ	0xFE5
   101                           preinc1	equ	0xFE4
   102                           plusw1	equ	0xFE3
   103                           fsr1h	equ	0xFE2
   104                           fsr1l	equ	0xFE1
   105                           bsr	equ	0xFE0
   106                           indf2	equ	0xFDF
   107                           postinc2	equ	0xFDE
   108                           postdec2	equ	0xFDD
   109                           preinc2	equ	0xFDC
   110                           plusw2	equ	0xFDB
   111                           fsr2h	equ	0xFDA
   112                           fsr2l	equ	0xFD9
   113                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                               Thu Jan 04 18:08:38 2024

                           PIR0 0EC5                             PIR1 0EC6                             PIR3 0EC8  
                         ADCON0 0F5B                          isa$std 0001              _timer0_int_handler 001E  
               _adc_int_handler 0028                     _int_handler 0008                        isa$xinst 0000  
             _identify_NCAP_cmd 0F02  
